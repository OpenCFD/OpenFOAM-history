package FoamXServer.CaseServer;


/**
* FoamXServer/CaseServer/_IGeometricFieldDescriptorStub.java .
* Generated by the IDL-to-Java compiler (portable), version "3.1"
* from FoamX.idl
* 02 April 2007 09:53:40 o'clock BST
*/


// ---------------------------------------------------------------------
public class _IGeometricFieldDescriptorStub extends org.omg.CORBA.portable.ObjectImpl implements FoamXServer.CaseServer.IGeometricFieldDescriptor
{

  public FoamXServer.ITypeDescriptor typeDescriptor ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("_get_typeDescriptor", true);
                $in = _invoke ($out);
                FoamXServer.ITypeDescriptor $result = FoamXServer.ITypeDescriptorHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return typeDescriptor (        );
            } finally {
                _releaseReply ($in);
            }
  } // typeDescriptor

  public FoamXServer.ITypeDescriptor fieldTypeDescriptor ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("_get_fieldTypeDescriptor", true);
                $in = _invoke ($out);
                FoamXServer.ITypeDescriptor $result = FoamXServer.ITypeDescriptorHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return fieldTypeDescriptor (        );
            } finally {
                _releaseReply ($in);
            }
  } // fieldTypeDescriptor

  public FoamXServer.CaseServer.IGeometryDescriptor geometryDescriptor ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("_get_geometryDescriptor", true);
                $in = _invoke ($out);
                FoamXServer.CaseServer.IGeometryDescriptor $result = FoamXServer.CaseServer.IGeometryDescriptorHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return geometryDescriptor (        );
            } finally {
                _releaseReply ($in);
            }
  } // geometryDescriptor


  //- Field name (eg, "p").
  public String name ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("_get_name", true);
                $in = _invoke ($out);
                String $result = $in.read_string ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return name (        );
            } finally {
                _releaseReply ($in);
            }
  } // name


  //- Field name (eg, "p").
  public void name (String newName)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("_set_name", true);
                $out.write_string (newName);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                name (newName        );
            } finally {
                _releaseReply ($in);
            }
  } // name


  //- Field description (eg, "Pressure").
  public String description ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("_get_description", true);
                $in = _invoke ($out);
                String $result = $in.read_string ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return description (        );
            } finally {
                _releaseReply ($in);
            }
  } // description


  //- Field description (eg, "Pressure").
  public void description (String newDescription)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("_set_description", true);
                $out.write_string (newDescription);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                description (newDescription        );
            } finally {
                _releaseReply ($in);
            }
  } // description


  //- Field type name (eg, "scalar").
  public String fieldTypeName ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("_get_fieldTypeName", true);
                $in = _invoke ($out);
                String $result = $in.read_string ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return fieldTypeName (        );
            } finally {
                _releaseReply ($in);
            }
  } // fieldTypeName


  //- Field type name (eg, "scalar").
  public void fieldTypeName (String newFieldTypeName)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("_set_fieldTypeName", true);
                $out.write_string (newFieldTypeName);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                fieldTypeName (newFieldTypeName        );
            } finally {
                _releaseReply ($in);
            }
  } // fieldTypeName


  //- Geometry type name (eg, "vol").
  public String geometryTypeName ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("_get_geometryTypeName", true);
                $in = _invoke ($out);
                String $result = $in.read_string ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return geometryTypeName (        );
            } finally {
                _releaseReply ($in);
            }
  } // geometryTypeName


  //- Geometry type name (eg, "vol").
  public void geometryTypeName (String newGeometryTypeName)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("_set_geometryTypeName", true);
                $out.write_string (newGeometryTypeName);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                geometryTypeName (newGeometryTypeName        );
            } finally {
                _releaseReply ($in);
            }
  } // geometryTypeName


  //- Field dimensions.
  public FoamXServer.DimensionSet dimensions ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("_get_dimensions", true);
                $in = _invoke ($out);
                FoamXServer.DimensionSet $result = FoamXServer.DimensionSetHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return dimensions (        );
            } finally {
                _releaseReply ($in);
            }
  } // dimensions


  //- Field dimensions.
  public void dimensions (FoamXServer.DimensionSet newDimensions)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("_set_dimensions", true);
                FoamXServer.DimensionSetHelper.write ($out, newDimensions);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                dimensions (newDimensions        );
            } finally {
                _releaseReply ($in);
            }
  } // dimensions

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:FoamXServer/CaseServer/IGeometricFieldDescriptor:1.0"};

  public String[] _ids ()
  {
    return (String[])__ids.clone ();
  }

  private void readObject (java.io.ObjectInputStream s) throws java.io.IOException
  {
     String str = s.readUTF ();
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.Object obj = org.omg.CORBA.ORB.init (args, props).string_to_object (str);
     org.omg.CORBA.portable.Delegate delegate = ((org.omg.CORBA.portable.ObjectImpl) obj)._get_delegate ();
     _set_delegate (delegate);
  }

  private void writeObject (java.io.ObjectOutputStream s) throws java.io.IOException
  {
     String[] args = null;
     java.util.Properties props = null;
     String str = org.omg.CORBA.ORB.init (args, props).object_to_string (this);
     s.writeUTF (str);
  }
} // class _IGeometricFieldDescriptorStub
