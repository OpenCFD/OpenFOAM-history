package FoamXServer;


/**
* FoamXServer/ErrorCode.java .
* Generated by the IDL-to-Java compiler (portable), version "3.1"
* from FoamX.idl
* 02 April 2007 09:53:40 o'clock BST
*/

public class ErrorCode implements org.omg.CORBA.portable.IDLEntity
{
  private        int __value;
  private static int __size = 9;
  private static FoamXServer.ErrorCode[] __array = new FoamXServer.ErrorCode [__size];

  public static final int _S_OK = 0;
  public static final FoamXServer.ErrorCode S_OK = new FoamXServer.ErrorCode(_S_OK);
  public static final int _E_FAIL = 1;
  public static final FoamXServer.ErrorCode E_FAIL = new FoamXServer.ErrorCode(_E_FAIL);
  public static final int _E_FOAM = 2;
  public static final FoamXServer.ErrorCode E_FOAM = new FoamXServer.ErrorCode(_E_FOAM);
  public static final int _E_INVALID_ARG = 3;
  public static final FoamXServer.ErrorCode E_INVALID_ARG = new FoamXServer.ErrorCode(_E_INVALID_ARG);
  public static final int _E_INVALID_PTR = 4;
  public static final FoamXServer.ErrorCode E_INVALID_PTR = new FoamXServer.ErrorCode(_E_INVALID_PTR);
  public static final int _E_INVALID_REF = 5;
  public static final FoamXServer.ErrorCode E_INVALID_REF = new FoamXServer.ErrorCode(_E_INVALID_REF);
  public static final int _E_INDEX_OUT_OF_BOUNDS = 6;
  public static final FoamXServer.ErrorCode E_INDEX_OUT_OF_BOUNDS = new FoamXServer.ErrorCode(_E_INDEX_OUT_OF_BOUNDS);
  public static final int _E_UNKNOWN_NAME = 7;
  public static final FoamXServer.ErrorCode E_UNKNOWN_NAME = new FoamXServer.ErrorCode(_E_UNKNOWN_NAME);
  public static final int _E_UNEXPECTED = 8;
  public static final FoamXServer.ErrorCode E_UNEXPECTED = new FoamXServer.ErrorCode(_E_UNEXPECTED);

  public int value ()
  {
    return __value;
  }

  public static FoamXServer.ErrorCode from_int (int value)
  {
    if (value >= 0 && value < __size)
      return __array[value];
    else
      throw new org.omg.CORBA.BAD_PARAM ();
  }

  protected ErrorCode (int value)
  {
    __value = value;
    __array[__value] = this;
  }
} // class ErrorCode
