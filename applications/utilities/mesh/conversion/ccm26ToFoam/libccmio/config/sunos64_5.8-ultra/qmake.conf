#
# $Id: qmake.conf,v 1.8 2006/03/06 19:49:56 wo Exp $
#
# qmake configuration for solaris-cc-64
#
# Written for Sun WorkShop 5.0, Forte Developer 6, and Sun ONE Studio 7.
#
# From the standards(5) manual page:
# 	The XNS4 specification is safe for use only in ILP32 (32-bit)
# 	environments and should not be used for LP64 (64-bit)
# 	application environments. Use XNS5, which has LP64-clean
# 	interfaces that are portable across ILP32 and LP64 environments.
# 	[...]
# 	For platforms supporting the LP64 (64-bit) programming environment
# 	where the SC5.0 Compilers have been installed, SUSv2-conforming LP64
# 	applications using XNS5 library calls should be built with command
# 	lines of the form:
# 		c89 $(getconf XBS5_LP64_OFF64_CFLAGS) -D_XOPEN_SOURCE=500 \
# 		    $(getconf XBS5_LP64_OFF64_LDFLAGS) foo.c -o foo \
# 		    $(getconf XBS5_LP64_OFF64_LIBS) -lxnet
# So it appears that _XOPEN_SOURCE=500 should be defined when building
# 64-bit applications (on Solaris 7 and better). But then __EXTENSIONS__
# should be defined as well to recover all the default system interface.
#

MAKEFILE_GENERATOR	= UNIX
TEMPLATE		= app
CONFIG			+= qt warn_on release link_prl

QMAKE_CC		= cc
QMAKE_LEX		= flex
QMAKE_LEXFLAGS		=
QMAKE_YACC		= yacc
QMAKE_YACCFLAGS		= -d
QMAKE_CFLAGS		= -xarch=v9 -D_XOPEN_SOURCE=500 -D__EXTENSIONS__
QMAKE_CFLAGS_DEPS	= -xM
QMAKE_CFLAGS_WARN_ON	=
QMAKE_CFLAGS_WARN_OFF	= -w
QMAKE_CFLAGS_RELEASE	= -O
QMAKE_CFLAGS_DEBUG	= -g
QMAKE_CFLAGS_SHLIB	= -KPIC
QMAKE_CFLAGS_YACC	=
QMAKE_CFLAGS_THREAD	= -mt

QMAKE_CXX		= CC
QMAKE_CXXFLAGS		= $$QMAKE_CFLAGS
#QMAKE_CXXFLAGS		= $$QMAKE_CFLAGS -instances=semiexplicit -template=no%wholeclass,no%extdef,no%geninlinefuncs
QMAKE_CXXFLAGS_DEPS	= $$QMAKE_CFLAGS_DEPS
QMAKE_CXXFLAGS_WARN_ON	= $$QMAKE_CFLAGS_WARN_ON
QMAKE_CXXFLAGS_WARN_OFF	= $$QMAKE_CFLAGS_WARN_OFF
QMAKE_CXXFLAGS_RELEASE	= -O2
QMAKE_CXXFLAGS_DEBUG	= $$QMAKE_CFLAGS_DEBUG
QMAKE_CXXFLAGS_SHLIB	= $$QMAKE_CFLAGS_SHLIB
QMAKE_CXXFLAGS_YACC	= $$QMAKE_CFLAGS_YACC
QMAKE_CXXFLAGS_THREAD	= $$QMAKE_CFLAGS_THREAD

QMAKE_INCDIR		=
QMAKE_LIBDIR		=
QMAKE_INCDIR_X11	= /usr/openwin/include
QMAKE_LIBDIR_X11	= /usr/openwin/lib
QMAKE_INCDIR_QT		= $(QTDIR)/include
QMAKE_LIBDIR_QT		= $(QTDIR)/lib
QMAKE_INCDIR_OPENGL	= /usr/openwin/include
QMAKE_LIBDIR_OPENGL	= /usr/openwin/lib

QMAKE_LINK		= CC
QMAKE_LINK_SHLIB	= CC
QMAKE_LFLAGS		= -xarch=v9
QMAKE_LFLAGS_RELEASE	=
QMAKE_LFLAGS_DEBUG	=
QMAKE_LFLAGS_SHLIB	= -G
QMAKE_LFLAGS_PLUGIN	= $$QMAKE_LFLAGS_SHLIB
QMAKE_LFLAGS_SONAME	= -h$$LITERAL_WHITESPACE
QMAKE_LFLAGS_THREAD	= -mt
QMAKE_RPATH		= -R

QMAKE_LIBS		= -lsocket -lnsl
QMAKE_LIBS_DYNLOAD	= -ldl
QMAKE_LIBS_X11		= -lXext -lX11 -lresolv -lsocket -lnsl
QMAKE_LIBS_X11SM	= -lSM -lICE
QMAKE_LIBS_NIS		=
QMAKE_LIBS_QT		= -lqt
QMAKE_LIBS_QT_THREAD	= -lqt-mt
QMAKE_LIBS_OPENGL	= -lGLU -lGL -lXmu
QMAKE_LIBS_OPENGL_QT	= -lGL -lXmu
QMAKE_LIBS_THREAD	= -lpthread -lrt

QMAKE_MOC		= $(QTDIR)/bin/moc
QMAKE_UIC		= $(QTDIR)/bin/uic

QMAKE_AR		= CC -xar -o
QMAKE_RANLIB		=

QMAKE_CLEAN		= -r $(OBJECTS_DIR)Templates.DB $(OBJECTS_DIR)SunWS_cache

QMAKE_TAR		= tar -cf
QMAKE_GZIP		= gzip -9f

QMAKE_COPY		= cp -f -p
QMAKE_MOVE		= mv -f
QMAKE_DEL_FILE		= rm -f
QMAKE_DEL_DIR		= rmdir
QMAKE_CHK_DIR_EXISTS	= test -d
QMAKE_MKDIR		= mkdir -p

# added options for MeshKernel:
DEFINES                 += SUNOS64_5_8_ULTRA
MK_BUILDNAME	          = sunos64_5.8-ultra
MK_LIBS_STLPORT         = -lstlport_sunpro64
MK_LIBS_STLPORT_DEBUG   = -lstlport_sunpro64_stldebug
