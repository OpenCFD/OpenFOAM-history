/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  1.5                                   |
|   \\  /    A nd           | Web:      http://www.OpenFOAM.org               |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      extrudeProperties;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

// Where to get surface from: either from surface ('surface') or
// from (flipped) patch of existing case ('patch')
constructFrom patch;    //surface;

// If construct from (flipped) patch
sourceCase "../cavity";
sourcePatch movingWall;

// If construct from surface
surface "movingWall.sMesh";


// Do front and back need to be merged?
mergeFaces false;

//- Linear extrusion in point-normal direction
//extrudeModel        linearNormal;
//- Wedge extrusion. If nLayers is 1 assumes symmetry around plane.
extrudeModel        wedge;
//- Extrudes into sphere around (0 0 0)
//extrudeModel        linearRadial;
//extrudeModel        sigmaRadial;

nLayers             6;

wedgeCoeffs
{
    axisPt      (0 0.1 0);
    axis        (1 0 0);
    angle       90.0;   // For nLayers=1 assume symmetry so angle/2 on each side
}

linearNormalCoeffs
{
    thickness       0.05;
}

linearRadialCoeffs
{
     R              0.1;
}

sigmaRadialCoeffs
{
    RTbyg           1;
    pRef            1;
    pStrat          1;
}


// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

