/*---------------------------------------------------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  1.0                                   |
|   \\  /    A nd           | Web:      http://www.openfoam.org               |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/

FoamFile
{
    version         2.0;
    format          ascii;

    root            "/home/penfold/mattijs/foam/mattijs2.1/run/icoFoam";
    case            "cavity";
    instance        "system";
    local           "";

    class           dictionary;
    object          sampleDict;
}


// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

// interpolationScheme : choice of
//	cell            : use cell-centre value only; constant over cells
//	cellPoint       : use cell-centre and vertex values
//	cellPointFace   : use cell-centre, vertex and face values.
// 1] vertex values determined from neighbouring cell-centre values
// 2] face values determined using the current face interpolation scheme
//    for the field (linear, gamma, etc.)
interpolationScheme cellPoint;


// writeFormat : choice of
//      xmgr
//      jplot
//      gnuplot
//      raw
writeFormat raw;


// sampling definition:
//
// Dictionary with fields
//      type : type of sampling method
//      name : name of samples. Used e.g. as filename
//      axis : how to write point coordinate
//      ...  : depending on method
//
//
// sample: choice of
//      uniform             evenly distributed points on line
//      face                one point per face intersection
//      midPoint            one point per cell, inbetween two face intersections
//      midPointAndFace     combination of face and midPoint
//
//      curve               specified points, not nessecary on line, uses
//                          tracking
//      cloud               specified points, uses findCell
//
//
// axis: how to write point coordinate. Choice of 
// - x/y/z: x/y/z coordinate only
// - xyz: three columns
//  (probably does not make sense for anything but raw)
// - distance: distance from start of sampling line (if uses line) or
//             distance from first specified sampling point
//
// type specific:
//      uniform, face, midPoint, midPointAndFace : start and end coordinate
//      uniform: extra number of sampling points
//      curve, cloud: list of coordinates
sampleSets
(
    uniform
    {
        name        lineX1;
        axis        distance;

        //- cavity
        start       (0.02 0.051 0.005);
        end         (0.06 0.051 0.005);
        nPoints     10;
    }

    face
    {
        name        lineX2;
        axis        x;

        //- flangeHex
        //start       (0 20  -20);
        //end         (0 20   10);

        //- nablaCavity
        //start       (-1 0.05 0.005);
        //end         ( 1 0.05 0.005);

        //- cavity
        start       (0.0 0.51  0.005);
        end         (2 0.51  0.005);
        nPoints     10;
    }
);


// Fields to sample.
fields
(
    p
    mag(U)
    U.component(1)
    R.component(0)
);


// ************************************************************************* //
