#!/bin/sh
#------------------------------------------------------------------------------
# =========                 |
# \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
#  \\    /   O peration     |
#   \\  /    A nd           | Copyright (C) 1991-2010 OpenCFD Ltd.
#    \\/     M anipulation  |
#-------------------------------------------------------------------------------
# License
#     This file is part of OpenFOAM.
#
#     OpenFOAM is free software; you can redistribute it and/or modify it
#     under the terms of the GNU General Public License as published by the
#     Free Software Foundation; either version 2 of the License, or (at your
#     option) any later version.
#
#     OpenFOAM is distributed in the hope that it will be useful, but WITHOUT
#     ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
#     FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
#     for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with OpenFOAM; if not, write to the Free Software Foundation,
#     Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
#
# Script
#     wclean
#
# Description
#     Clean up the wmake control directory Make/\$WM_OPTIONS and remove the
#     lnInclude directories generated for libraries.
#
#------------------------------------------------------------------------------
Script=${0##*/}

usage() {
    while [ "$#" -ge 1 ]; do echo "$1"; shift; done
    cat<<USAGE

Usage: $Script [OPTION] [dir]
       $Script [OPTION] target [dir [MakeDir]]

options:
  -help             print the usage

Clean up the wmake control directory Make/\$WM_OPTIONS and remove the
lnInclude directories generated for libraries.

The targets correspond to a subset of the 'wmake' special targets:
    all       all subdirectories
              (NB: any Allwclean or Allclean files will be used if they exist)
    exe       clean dir/Make
    lib       clean dir/Make and dir/lnInclude
    libo      clean dir/Make and dir/lnInclude
    libso     clean dir/Make and dir/lnInclude

USAGE
   exit 1
}

# provide immediate help
if [ "$1" = "-h" -o "$1" = "-help" ]
then
    usage
fi


#------------------------------------------------------------------------------
# check arguments and change to the directory in which to run wmake
#------------------------------------------------------------------------------

unset dir makeOption
MakeDir=Make

if [ $# -ge 1 ]
then

    if [ -d "$1" ]
    then
        dir=$1
    else
        makeOption=$1
    fi

    # specified directory name:
    [ $# -ge 2 ] && dir=$2

    # specified alternative name for the Make sub-directory:
    [ $# -ge 3 ] && MakeDir=$3

    if [ "$dir" ]
    then
        cd $dir 2>/dev/null || {
            echo "$Script error: could not change to directory '$dir'" 1>&2
            exit 1
        }
    fi

    # provide some feedback
    echo "$Script ${dir:-./}"
fi

#------------------------------------------------------------------------------
# Recurse the directories tree
#------------------------------------------------------------------------------

if [ "$makeOption" = all ]
then
    if [ -e Allwclean ]       # consistent with Allwmake
    then
        ./Allwclean
        exit $?
    elif [ -e Allclean ]      # often used for tutorial cases
    then
        ./Allclean
        exit $?
    elif [ ! -d $MakeDir ]
    then
        for dir in `find . \( -type d -a -name Make \) -printf "%h "`
        do
            $0 $dir
        done
        exit 0
    fi

    # This is the end of the recursion down the application directories tree
    # so remove the "all" option so that the call to make builds the application
    makeOption=
fi

#------------------------------------------------------------------------------
# Check the existance of the Make directory
#------------------------------------------------------------------------------

if [ ! -d $MakeDir ]
then
    echo "$Script error: '$MakeDir' directory does not exist" 1>&2
    exit 1
fi

# -----------------------------------------------------------------------------

rm -rf $MakeDir/$WM_OPTIONS $MakeDir/classes 2>/dev/null

find . -name "*.dep" -exec rm {} \;

case "$makeOption" in
lib | libo | libso )
    rm -rf lnInclude 2>/dev/null
    ;;
esac

rm -rf ii_files Templates.DB 2>/dev/null
rm -f so_locations

#------------------------------------------------------------------------------
