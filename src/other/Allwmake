#!/bin/sh
set -x

# export WM settings in a form that GNU configure recognizes
[ -n "$WM_CC" ]         &&  export CC="$WM_CC"
[ -n "$WM_CXX" ]        &&  export CXX="$WM_CXX"
[ -n "$WM_CFLAGS" ]     &&  export CFLAGS="$WM_CFLAGS"
[ -n "$WM_CXXFLAGS" ]   &&  export CXXFLAGS="$WM_CXXFLAGS"
[ -n "$WM_LDFLAGS" ]    &&  export LDFLAGS="$WM_LDFLAGS"

wmake libso zlib-1.2.1

( cd malloc && ./Allwmake )

#
# compile specific mpi libraries
#
case "$WM_MPLIB" in
OPENMPI)
   if [ -r $OPENMPI_ARCH_PATH/lib/libmpi.so ]
   then
      echo "have $WM_MPLIB shared library"
   elif [ -r $OPENMPI_ARCH_PATH/lib/libmpi.a ]
   then
      echo "have $WM_MPLIB static library"
   else
   (
      cd $OPENMPI_HOME

      gmake distclean
      rm -rf $OPENMPI_ARCH_PATH

      ./configure \
          --prefix=$OPENMPI_ARCH_PATH \
          --disable-mpirun-prefix-by-default \
          --disable-orterun-prefix-by-default \
          --enable-shared --disable-static \
          --disable-mpi-f77 --disable-mpi-f90 --disable-mpi-cxx \
          --disable-mpi-profile
          # These lines enable Infiniband support
          # --with-openib=/usr/local/ofed \
          # --with-openib-libdir=/usr/local/ofed/lib64

      gmake
      gmake install
      gmake distclean
   )
   fi
   ;;

LAM)
   if [ -r $LAM_ARCH_PATH/lib/libmpi.so ]
   then
      echo "have $WM_MPLIB shared library"
   elif [ -r $LAM_ARCH_PATH/lib/libmpi.a ]
   then
      echo "have $WM_MPLIB static library"
   else
   (
      cd $LAMHOME

      gmake distclean
      rm -rf $LAM_ARCH_PATH

      ./configure \
          --prefix=$LAM_ARCH_PATH \
          --enable-shared \
          --disable-static \
          --without-romio \
          --without-mpi2cpp \
          --without-profiling \
          --without-fc

      gmake
      gmake install
      gmake distclean
   )
   fi
   ;;

MPICH)
   if [ -r $MPICH_ARCH_PATH/lib/libmpich.so ]
   then
      echo "have $WM_MPLIB shared library"
   elif [ -r $MPICH_ARCH_PATH/lib/libmpich.a ]
   then
      echo "have $WM_MPLIB static library"
   else
   (
      cd $MPICH_PATH

      make distclean
      rm -rf $MPICH_ARCH_PATH
      rm util/machines/machines.*

      ./configure \
          --without-mpe \
          --disable-f77 \
          --disable-f90 \
          --disable-f90modules \
          --disable-c++ \
          --disable-mpedbg \
          --disable-devdebug \
          --disable-debug \
          --enable-sharedlib=$MPICH_ARCH_PATH/lib \
          --with-device=ch_p4 \
          -prefix=$MPICH_ARCH_PATH
      make
      make install
      make distclean

      if [ -r $MPICH_ARCH_PATH ]
      then
         cd $MPICH_ARCH_PATH/bin
         for file in *
         do
            sed s%$MPICH_ARCH_PATH%'$MPICH_ARCH_PATH'%g $file > temp.$$
            mv temp.$$ $file
            chmod ugo+rx $file
         done

         cd $MPICH_ARCH_PATH/lib

         if [ -r libmpich.so.1.0 ]
         then
            rm *.so
            ln -s libmpich.so.1.0 libmpich.so
         fi
      fi
   )
   fi
   ;;

esac

# Build Metis
( cd metis-5.0pre2 && wmake libso GKlib && wmake libso libmetis )

# Build parMetis. Requires mpi!
if [ -d $FOAM_MPI_LIBBIN ]
then
   ( cd ParMetis-3.1 && wmake libso METISLib && wmake libso ParMETISLib )
fi



if [ "$MICO_ARCH_PATH" -a ! -r $MICO_ARCH_PATH/lib/libmico${MICO_VERSION}.a ]
then
(
   cd $MICO_PATH
   make distclean
   ./configure --prefix=$MICO_ARCH_PATH --disable-shared --without-x
   make
   make install
   make distclean
)
fi


# ----------------------------------------------------------------- end-of-file
