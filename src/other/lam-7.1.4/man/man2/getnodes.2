.TH GETNODES 2 "July, 2007" "LAM 7.1.4" "LAM NETWORK LIBRARY"
.SH NAME
getnodes \- Get array of LAM node identifiers.
.SH C SYNOPSIS
.nf
#include <net.h>

int getnodes (int *nodes, int nnodes, int nodetype, int typemask);
int getall (int *nodes, int nnodes);
int getcomps (int *nodes, int nnodes);
int getjones (int *nodes, int nnodes);
int getotbs (int *nodes, int nnodes);
.fi
.SH FORTRAN SYNOPSIS
.nf
subroutine GNODES (nodes, nnodes, nodetype, typemask, ierror)
subroutine GALL (nodes, nnodes, ierror)
subroutine GCOMPS (nodes, nnodes, ierror)
subroutine GJONES (nodes, nnodes, ierror)
subroutine GOTBS (nodes, nnodes, ierror)

integer nodes(*), nnodes, nodetype, typemask, ierror
.fi
.SH DESCRIPTION
.I getnodes()
fills the array,
.IR nodes ,
with no more than
.I nnodes
node identifiers whose types match
.I nodetype
at the bit positions specified by
.IR typemask .
Given sufficient space and a sufficiently large
.IR nnodes ,
all node identifiers having a node type field that satisfies
the relation imposed by the
.I nodetype
and
.I typemask
arguments will be returned.
.PP
The remaining functions are wrappers for
.I getnodes()
that match commonly used node types.
.PP
.TP 12
.I getotbs()
OTB nodes
.TP
.I getall()
all nodes
.TP
.I getcomps()
nodes in main computing group (see getntype(2))
.TP
.I getjones()
neighbour nodes of the caller
.PP
The node type is a combination of flags, defined in <net.h>,
describing the capabilities of the node.
Usage of the
.I nodetype
and
.I typemask
arguments in
.I getnodes()
is identical to getntype(2).
Indeed, getntype(2) is usually called before
.I getnodes()
to count the matching nodes and thus ascertain the space requirement
for the node array.
No indication of the number of returned node identifiers is given by
.IR getnodes() .
.SH SEE ALSO
getntype(2)
