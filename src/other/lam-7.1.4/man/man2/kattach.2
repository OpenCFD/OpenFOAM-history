.TH KATTACH 2 "July, 2007" "LAM 7.1.4" "LAM LOCAL LIBRARY"
.SH NAME
kattach, kdetach \- Attach/detach a process to/from the local LAM daemon.
.SH SYNOPSIS
.nf
int kattach (int priority);
int kdetach (int pid);
.fi
.SH DESCRIPTION
These functions allow a process to join and leave a LAM session.
An existing process running under the native operating system calls
.I kattach()
to register with the local LAM daemon.
The LAM daemon must already be running or the operation fails and an
error is returned.
.PP
.I kattach()
is eventually called by kenter(2) and is therefore typically used
in rare cases when a process wishes to change priority or
return to the LAM session after temporarily detaching.
.I kattach()
cannot be called before kenter(2).
The
.I priority
argument determines the synchronization priority of the calling process.
See kenter(2).
.PP
.I kdetach()
de-registers a process from the local LAM daemon.
The process "dies" as far as the LAM daemon is concerned.
It effectively undoes what
.I kattach()
did.
.I kdetach()
is eventually called by kexit(2) and is therefore typically used
in rare cases when a process wishes to leave LAM control
without terminating.
The
.I pid
argument is the process ID of the process to be detached.
A process ID of 0 is interpreted as a request to detach the calling process,
and is the normal usage of
.IR kdetach() .
Detaching peer LAM processes is intended as an emergency clean up
measure and is not normal usage.
.SH ERRORS
.TP 15
ENOKERNEL
The LAM daemon is not running.
.TP
ENOTATTACHED
The calling process is not a LAM process.
.SH SEE ALSO
kenter(2), kexit(2)
