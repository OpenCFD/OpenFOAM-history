.TH LPATTACH 2 "July, 2007" "LAM 7.1.4" "LAM LOCAL LIBRARY"
.SH NAME
lpattach, lpdetach \- Attach, detach a LAM process from remote
process management.
.SH SYNOPSIS
int lpattach (char *name);
.br
int lpdetach (int pid, int status);
.SH DESCRIPTION
Remote process management allows a process to be
selected by other processes throughout the multicomputer
for control or monitoring in such functions as rpdoom(2), rpstate(2)
and rpspawn(2).
.PP
The
.I name
argument helps identify the process.
It is useful to choose the program name, as found in argv[0], for
this argument.
The name will be seen in the output of the state(1) command.
.I lpattach()
is called by kenter(2) and is not typically called directly.
.PP
The function
.I lpdetach()
makes a LAM process inaccessible to remote process management
and should be called just prior to process termination.
The
.I status
argument is an exit code.
If a parent process is waiting for the calling process to terminate,
.I lpdetach()
will pass the termination status back to the parent.
.I lpdetach()
is called by kexit(2) and is not typically called directly.
.PP
The
.I pid
argument makes it possible for one process to remove another
from remote process management.
This is intended as an emergency clean-up measure.
The normal value for this argument is 0, which indicates the action
is to be taken on the calling process.
.SH ERRORS
.TP 20
ENOPDESCRIPTORS
The remote process descriptor table is full.
.TP
ENOTPROCESS
The process whose process identifier was passed to
.I lpdetach()
is not currently being managed.
.SH SEE ALSO
rpdoom(2), rpstate(2)
