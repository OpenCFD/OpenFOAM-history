.TH RPSTATE 2 "July, 2007" "LAM 7.1.4" "LAM REMOTE LIBRARY"
.SH NAME
rpstate \- Report status of LAM processes on a remote node.
.SH SYNOPSIS
#include <preq.h>
.HP
int rpstate(int node, int sflags, int svalue, struct pstate *stat_tab,
int maxsize);
.SH ARGUMENTS
.TP 12
node
target node where selected processes are running
.TP
sflags
selection method
.TP
svalue
selection matching value, if required, otherwise ignored
.TP
stat_tab
array of remote process status structures (output)
.TP
maxsize
size of
.I stat_tab
array
.SH DESCRIPTION
.SS Selection Methods
Processes to be reported from the target node are selected
by one of several methods, chosen in the
.I sflags
argument.
The selection method codes are defined in <preq.h>.
.TP 18
SELECT_PID
Select by process ID.
The
.I svalue
argument contains the process ID.
.TP
SELECT_INDEX
Select by process table index.
The
.I svalue
argument contains the index.
.TP
SELECT_APPL
Select all application (user) processes.
.TP
SELECT_SYS
Select all system processes.
.TP
SELECT_ALL
Select all application and all system processes.
.SS Remote Process Status
The status structure array,
.IR stat_tab ,
is filled with information on the selected processes.
The structure is defined in <preq.h>.
.PP
.nf
.RS
.ta .5i 2.5i
struct pstate {
	int		ps_reply;
	int		ps_index;
	int		ps_pid;
	int		ps_rtf;
	int		ps_nodeid;
	int		ps_event;
	struct kstatus	ps_kernel;
	char		ps_name[PSMAXNAME];
	char		ps_loadpt[PSMAXNAME];
};
.RE
.fi
.PP
.TP 15
ps_reply
internal use by
.I rpstate()
.TP
ps_index
index within target node
.TP
ps_pid
identifier within target node
.TP
ps_rtf
runtime flags, see rploadgo(2)
.TP
ps_nodeid
parent's node identifier
.TP
ps_event
parent's event for reporting process's exit
.TP
ps_kernel
kernel status, see kstate(2)
.TP
ps_name
argv[0], usually the program name, see kenter(2)
.TP
ps_loadpt
load module filename
.SH RETURN VALUE
Upon successful completion,
the number of selected processes is returned.
This could be more or less than
.IR maxsize .
If an error occurred,
\-1 is returned and the global variable
.I errno
is set to indicate the error.
.SH SEE ALSO
kstate(2), rploadgo(2)
