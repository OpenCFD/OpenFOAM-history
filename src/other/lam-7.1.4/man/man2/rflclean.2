.TH RFLAT 2 "July, 2007" "LAM 7.1.4" "LAM REMOTE LIBRARY"
.SH NAME
rflat \- Tag and load storage on LAM remote nodes.
.SH SYNOPSIS
.hy 0
.HP
int rflat (int node, char *buffer, int ld_length, int ma_length, int tag);
.HP
int rflclean (int node, int tag);
.hy 1
.SH ARGUMENTS
.TP 12
node
where data will be stored
.TP
buffer
data to be stored
.TP
ld_length
length of data to be stored
.TP
ma_length
length of storage to allocate
.TP
tag
label to assign to remote storage for future reference
.SH DESCRIPTION
The
.I tag
serves as a symbolic name, and is not related to the actual
address of the allocated remote storage.
The
.I flat
daemon remembers the tag.
A later call to rget(2) can retrieve the actual address of the storage.
.PP
The
.I ld_length
and
.I ma_length
arguments are almost always set to the same value.
A larger value for
.I ma_length
(the only other possibility)
allows extra contiguous storage to be allocated but not loaded.
.PP
The
.I rflclean()
function frees any storage associated with the flat tag.
It also deletes the flat tag.
.SH ERRORS
.TP 20
ENOFLDESCRIPTORS
The table of storage addresses (kept by the
.I flat
server) is full.
.SH SEE ALSO
rget(2), rload(2)
