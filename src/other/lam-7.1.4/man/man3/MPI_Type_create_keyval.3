.TH MPI_Type_create_keyval 3 "6/24/2006" "LAM/MPI 7.1.4" "LAM/MPI"
.SH NAME
MPI_Type_create_keyval \-  Create a datatype attribute key 
.SH SYNOPSIS
.nf
#include <mpi.h>
int
MPI_Type_create_keyval(MPI_Type_copy_attr_function *cpyfunc, 
                       MPI_Type_delete_attr_function *delfunc, int *key, 
                       void *extra)
.fi
.SH INPUT PARAMETERS
.PD 0
.TP
.B copyfunc 
- Copy callback function for type_keyval (function) 
.PD 1
.PD 0
.TP
.B delfunc 
- Delete callback function for type_keyval (function) 
.PD 1
.PD 0
.TP
.B extra 
- extra state for callback functions
.PD 1

.SH OUTPUT PARAMETER
.PD 0
.TP
.B key 
- key value for future access (integer)
.PD 1

.SH NOTES FOR FORTRAN

All MPI routines in Fortran (except for 
.I MPI_WTIME
and 
.I MPI_WTICK
)
have an additional argument 
.I ierr
at the end of the argument list.
.I ierr
is an integer and has the same meaning as the return value of
the routine in C.  In Fortran, MPI routines are subroutines, and are
invoked with the 
.I call
statement.

All MPI objects (e.g., 
.I MPI_Datatype
, 
.I MPI_Comm
) are of type
.I INTEGER
in Fortran.

.SH USAGE WITH IMPI EXTENSIONS

The IMPI standard only supports MPI-1 functions.  Hence, this function
is currently not designed to operate within an IMPI job.

.SH ERRORS

If an error occurs in an MPI function, the current MPI error handler
is called to handle it.  By default, this error handler aborts the
MPI job.  The error handler may be changed with 
.I MPI_Errhandler_set
;
the predefined error handler 
.I MPI_ERRORS_RETURN
may be used to cause
error values to be returned (in C and Fortran; this error handler is
less useful in with the C++ MPI bindings.  The predefined error
handler 
.I MPI::ERRORS_THROW_EXCEPTIONS
should be used in C++ if the
error value needs to be recovered).  Note that MPI does 
.I not
guarantee that an MPI program can continue past an error.

All MPI routines (except 
.I MPI_Wtime
and 
.I MPI_Wtick
) return an error
value; C routines as the value of the function and Fortran routines
in the last argument.  The C++ bindings for MPI do not return error
values; instead, error values are communicated by throwing exceptions
of type 
.I MPI::Exception
(but not by default).  Exceptions are only
thrown if the error value is not 
.I MPI::SUCCESS
\&.


Note that if the 
.I MPI::ERRORS_RETURN
handler is set in C++, while
MPI functions will return upon an error, there will be no way to
recover what the actual error value was.
.PD 0
.TP
.B MPI_SUCCESS 
- No error; MPI routine completed successfully.
.PD 1
.PD 0
.TP
.B MPI_ERR_TYPE 
- Invalid datatype argument.  May be an uncommitted
MPI_Datatype (see 
.I MPI_Type_commit
).
.PD 1
.PD 0
.TP
.B MPI_ERR_OTHER 
- Other error; the error code associated with this
error indicates an attempt to use an invalue keyval.
.PD 1
.PD 0
.TP
.B MPI_ERR_ARG 
- Invalid argument.  Some argument is invalid and is not
identified by a specific error class.  This is typically a NULL
pointer or other such error.
.PD 1

.SH SEE ALSO
MPI_Type_free_keyval(3), MPI_Type_get_attr(3), MPI_Type_set_attr(3), MPI_Type_delete_attr(3)
.br

.SH MORE INFORMATION

For more information, please see the official MPI Forum web site,
which contains the text of both the MPI-1 and MPI-2 standards.  These
documents contain detailed information about each MPI function (most
of which is not duplicated in these man pages).

.I http://www.mpi-forum.org/
.SH LOCATION
tcreatekey.c
