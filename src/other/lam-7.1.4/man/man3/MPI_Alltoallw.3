.TH MPI_Alltoallw 3 "6/24/2006" "LAM/MPI 7.1.4" "LAM/MPI"
.SH NAME
MPI_Alltoallw \-  Sends data from all to all processes, with a displacement 
.SH SYNOPSIS
.nf
#include <mpi.h>
int MPI_Alltoallw(void *sbuf, int *scounts, int *sdisps, 
                 MPI_Datatype *sdtypes, void *rbuf, int *rcounts, 
                 int *rdisps, MPI_Datatype *rdtypes, 
                 MPI_Comm comm)
.fi
.SH INPUT PARAMETERS
.PD 0
.TP
.B sbuf 
- starting address of send buffer (choice) 
.PD 1
.PD 0
.TP
.B scounts 
- integer array equal to the group size 
specifying the number of elements to send to each processor 
.PD 1
.PD 0
.TP
.B sdisps 
- integer array (of length group size). Entry 
.I j
specifies the displacement (relative to sendbuf  from
which to take the outgoing data destined for process  
.I j

.PD 1
.PD 0
.TP
.B sdtype 
- data type of send buffer elements (handle) 
.PD 1
.PD 0
.TP
.B rcounts 
- integer array equal to the group size 
specifying the maximum number of elements that can be received from
each processor 
.PD 1
.PD 0
.TP
.B rdisps 
- integer array (of length group size). Entry 
.I i
specifies the displacement (relative to recvbuf  at
which to place the incoming data from process  
.I i

.PD 1
.PD 0
.TP
.B rdtypes 
- data types of receive buffer elements (handle) 
.PD 1
.PD 0
.TP
.B comm 
- communicator (handle) 
.PD 1

.SH OUTPUT PARAMETER
.PD 0
.TP
.B rbuf 
- address of receive buffer (choice) 
.PD 1

.SH NOTES

The receive buffer 
.I rbuf
needs to be large enough to hold the data
that will be received from 
.I all
processes.

.SH USAGE WITH IMPI EXTENSIONS

LAM/MPI does not yet support invoking this function on a communicator
that contains ranks that are non-local IMPI procs.

.SH NOTES FOR FORTRAN

All MPI routines in Fortran (except for 
.I MPI_WTIME
and 
.I MPI_WTICK
)
have an additional argument 
.I ierr
at the end of the argument list.
.I ierr
is an integer and has the same meaning as the return value of
the routine in C.  In Fortran, MPI routines are subroutines, and are
invoked with the 
.I call
statement.

All MPI objects (e.g., 
.I MPI_Datatype
, 
.I MPI_Comm
) are of type
.I INTEGER
in Fortran.

.SH ERRORS

If an error occurs in an MPI function, the current MPI error handler
is called to handle it.  By default, this error handler aborts the
MPI job.  The error handler may be changed with 
.I MPI_Errhandler_set
;
the predefined error handler 
.I MPI_ERRORS_RETURN
may be used to cause
error values to be returned (in C and Fortran; this error handler is
less useful in with the C++ MPI bindings.  The predefined error
handler 
.I MPI::ERRORS_THROW_EXCEPTIONS
should be used in C++ if the
error value needs to be recovered).  Note that MPI does 
.I not
guarantee that an MPI program can continue past an error.

All MPI routines (except 
.I MPI_Wtime
and 
.I MPI_Wtick
) return an error
value; C routines as the value of the function and Fortran routines
in the last argument.  The C++ bindings for MPI do not return error
values; instead, error values are communicated by throwing exceptions
of type 
.I MPI::Exception
(but not by default).  Exceptions are only
thrown if the error value is not 
.I MPI::SUCCESS
\&.


Note that if the 
.I MPI::ERRORS_RETURN
handler is set in C++, while
MPI functions will return upon an error, there will be no way to
recover what the actual error value was.
.PD 0
.TP
.B MPI_ERR_COMM 
- Invalid communicator.  A common error is to use a
null communicator in a call (not even allowed in 
.I MPI_Comm_rank
).
.PD 1
.PD 0
.TP
.B MPI_ERR_OTHER 
- A collective implementation was not able to be
located at run-time for this communicator.  
.PD 1
.PD 0
.TP
.B MPI_ERR_OTHER 
- A communicator that contains some non-local IMPI
procs was used for some function which has not yet had the IMPI
extensions implemented yet.  For example, most collectives on IMPI
communicators have not been implemented yet.
.PD 1
.PD 0
.TP
.B MPI_ERR_COUNT 
- Invalid count argument.  Count arguments must be
non-negative; a count of zero is often valid.
.PD 1
.PD 0
.TP
.B MPI_ERR_TYPE 
- Invalid datatype argument.  May be an uncommitted
MPI_Datatype (see 
.I MPI_Type_commit
).
.PD 1
.PD 0
.TP
.B MPI_ERR_BUFFER 
- Invalid buffer pointer.  Usually a null buffer
where one is not valid.
.PD 1

.SH MORE INFORMATION

For more information, please see the official MPI Forum web site,
which contains the text of both the MPI-1 and MPI-2 standards.  These
documents contain detailed information about each MPI function (most
of which is not duplicated in these man pages).

.I http://www.mpi-forum.org/


.SH ACKNOWLEDGEMENTS

The LAM Team would like the thank the MPICH Team for the handy program
to generate man pages ("doctext" from
.I ftp://ftp.mcs.anl.gov/pub/sowing/sowing.tar.gz
), the initial
formatting, and some initial text for most of the MPI-1 man pages.
.SH LOCATION
alltoallw.c
