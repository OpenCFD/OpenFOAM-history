.TH MPI_Win_free 3 "6/24/2006" "LAM/MPI 7.1.4" "LAM/MPI"
.SH NAME
MPI_Win_free \-  Frees a window object 
.SH SYNOPSIS
.nf
#include <mpi.h>
int
MPI_Win_free(MPI_Win *win)
.fi
.SH INPUT PARAMETER
.PD 0
.TP
.B win 
- window object (handle) 
.PD 1

.SH NOTES

Frees the window object win and returns a null handle (equal to
MPI_WIN_NULL). This is a collective call executed by all processes in
the group associated with win. MPI_WIN_FREE(win) can be invoked by a
process only after it has completed its involvement in RMA
communications on window win: i.e., the process has called
MPI_WIN_FENCE, or called MPI_WIN_WAIT to match a previous call to
MPI_WIN_POST or called MPI_WIN_COMPLETE to match a previous call to
MPI_WIN_START or called MPI_WIN_UNLOCK to match a previous call to
MPI_WIN_LOCK. When the call returns, the window memory can be freed.

.SH NOTES FOR FORTRAN

All MPI routines in Fortran (except for 
.I MPI_WTIME
and 
.I MPI_WTICK
)
have an additional argument 
.I ierr
at the end of the argument list.
.I ierr
is an integer and has the same meaning as the return value of
the routine in C.  In Fortran, MPI routines are subroutines, and are
invoked with the 
.I call
statement.

All MPI objects (e.g., 
.I MPI_Datatype
, 
.I MPI_Comm
) are of type
.I INTEGER
in Fortran.
.SH USAGE WITH IMPI EXTENSIONS

The IMPI standard only supports MPI-1 functions.  Hence, this function
is currently not designed to operate within an IMPI job.

.SH ERRORS

If an error occurs in an MPI function, the current MPI error handler
is called to handle it.  By default, this error handler aborts the
MPI job.  The error handler may be changed with 
.I MPI_Errhandler_set
;
the predefined error handler 
.I MPI_ERRORS_RETURN
may be used to cause
error values to be returned (in C and Fortran; this error handler is
less useful in with the C++ MPI bindings.  The predefined error
handler 
.I MPI::ERRORS_THROW_EXCEPTIONS
should be used in C++ if the
error value needs to be recovered).  Note that MPI does 
.I not
guarantee that an MPI program can continue past an error.

All MPI routines (except 
.I MPI_Wtime
and 
.I MPI_Wtick
) return an error
value; C routines as the value of the function and Fortran routines
in the last argument.  The C++ bindings for MPI do not return error
values; instead, error values are communicated by throwing exceptions
of type 
.I MPI::Exception
(but not by default).  Exceptions are only
thrown if the error value is not 
.I MPI::SUCCESS
\&.


Note that if the 
.I MPI::ERRORS_RETURN
handler is set in C++, while
MPI functions will return upon an error, there will be no way to
recover what the actual error value was.
.PD 0
.TP
.B MPI_SUCCESS 
- No error; MPI routine completed successfully.
.PD 1
.PD 0
.TP
.B MPI_ERR_WIN 
- Invalid window.  A common error is to use a
null window in a call.
.PD 1
.PD 0
.TP
.B MPI_ERR_EPOCH 
- This error indicates than an operation has been
attempted on a "closed" window. Certain one-sided operations can
only be performed on windows whose epoch has been started with
MPI_Win_start.
.PD 1

.SH SEE ALSO
MPI_Put(3), MPI_Get(3), MPI_Win_create(3), MPI_Win_start(3), MPI_Win_complete(3), MPI_Win_fence(3), MPI_Accumulate(3), MPI_Win_get_group(3), MPI_Win_get_group(3), MPI_Win_wait(3)
.br

.SH MORE INFORMATION

For more information, please see the official MPI Forum web site,
which contains the text of both the MPI-1 and MPI-2 standards.  These
documents contain detailed information about each MPI function (most
of which is not duplicated in these man pages).

.I http://www.mpi-forum.org/
.SH LOCATION
wfree.c
