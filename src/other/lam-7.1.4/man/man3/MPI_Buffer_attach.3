.TH MPI_Buffer_attach 3 "6/24/2006" "LAM/MPI 7.1.4" "LAM/MPI"
.SH NAME
MPI_Buffer_attach \-  Attaches a user-defined buffer for sending 
.SH SYNOPSIS
.nf
#include <mpi.h>
int MPI_Buffer_attach(void *buf, int size)
.fi
.SH INPUT PARAMETERS
.PD 0
.TP
.B buf 
- initial buffer address (choice) 
.PD 1
.PD 0
.TP
.B size 
- buffer size, in bytes (integer) 
.PD 1

.SH NOTES

The size given should be the sum of the sizes of all outstanding
Bsends that you intend to have, plus a few hundred bytes for each
Bsend that you do.  For the purposes of calculating size, you should
use 
.I MPI_Pack_size
\&.
In other words, in the code

.nf
MPI_Buffer_attach( buffer, size );
MPI_Bsend( ..., count=20, datatype=type1,  ... );
\&.
\&.
\&.
MPI_Bsend( ..., count=40, datatype=type2, ... );
.fi


the value of 
.I size
in the 
.I MPI_Buffer_attach
call should be greater
than the value computed by

.nf
MPI_Pack_size(20, type1, comm, &s1);
MPI_Pack_size(40, type2, comm, &s2);
size = s1 + s2 + 2 * MPI_BSEND_OVERHEAD;
.fi


.I MPI_Bsend_overhead
gives the maximum amount of space that may be
used in the buffer for use by the 
.I Bsend
routines in using the
buffer.  This value is in 
.I mpi.h
(for C) and 
.I mpif.h
(for Fortran).

.SH NOTES FOR FORTRAN

All MPI routines in Fortran (except for 
.I MPI_WTIME
and 
.I MPI_WTICK
)
have an additional argument 
.I ierr
at the end of the argument list.
.I ierr
is an integer and has the same meaning as the return value of
the routine in C.  In Fortran, MPI routines are subroutines, and are
invoked with the 
.I call
statement.

All MPI objects (e.g., 
.I MPI_Datatype
, 
.I MPI_Comm
) are of type
.I INTEGER
in Fortran.

.SH ERRORS

If an error occurs in an MPI function, the current MPI error handler
is called to handle it.  By default, this error handler aborts the
MPI job.  The error handler may be changed with 
.I MPI_Errhandler_set
;
the predefined error handler 
.I MPI_ERRORS_RETURN
may be used to cause
error values to be returned (in C and Fortran; this error handler is
less useful in with the C++ MPI bindings.  The predefined error
handler 
.I MPI::ERRORS_THROW_EXCEPTIONS
should be used in C++ if the
error value needs to be recovered).  Note that MPI does 
.I not
guarantee that an MPI program can continue past an error.

All MPI routines (except 
.I MPI_Wtime
and 
.I MPI_Wtick
) return an error
value; C routines as the value of the function and Fortran routines
in the last argument.  The C++ bindings for MPI do not return error
values; instead, error values are communicated by throwing exceptions
of type 
.I MPI::Exception
(but not by default).  Exceptions are only
thrown if the error value is not 
.I MPI::SUCCESS
\&.


Note that if the 
.I MPI::ERRORS_RETURN
handler is set in C++, while
MPI functions will return upon an error, there will be no way to
recover what the actual error value was.
.PD 0
.TP
.B MPI_SUCCESS 
- No error; MPI routine completed successfully.
.PD 1
.PD 0
.TP
.B MPI_ERR_BUFFER 
- Invalid buffer pointer.  Usually a null buffer
where one is not valid.
.PD 1
.PD 0
.TP
.B MPI_ERR_INTERN 
- An internal error has been detected.  This is
fatal.  Please send a bug report to the LAM mailing list (see
.I http://www.lam-mpi.org/contact.php
). 
.PD 1

.SH SEE ALSO
MPI_Buffer_detach, MPI_Bsend
.br

.SH MORE INFORMATION

For more information, please see the official MPI Forum web site,
which contains the text of both the MPI-1 and MPI-2 standards.  These
documents contain detailed information about each MPI function (most
of which is not duplicated in these man pages).

.I http://www.mpi-forum.org/


.SH ACKNOWLEDGEMENTS

The LAM Team would like the thank the MPICH Team for the handy program
to generate man pages ("doctext" from
.I ftp://ftp.mcs.anl.gov/pub/sowing/sowing.tar.gz
), the initial
formatting, and some initial text for most of the MPI-1 man pages.
.SH LOCATION
bufattach.c
