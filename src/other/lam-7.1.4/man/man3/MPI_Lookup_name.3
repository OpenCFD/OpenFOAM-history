.TH MPI_Lookup_name 3 "6/24/2006" "LAM/MPI 7.1.4" "LAM/MPI"
.SH NAME
MPI_Lookup_name \-  Lookup a previously published name 
.SH SYNOPSIS
.nf
#include <mpi.h>
int
MPI_Unpublish_name(char *service_name, MPI_Info info, char *port_name)
.fi
.SH INPUT PARAMETERS
.PD 0
.TP
.B service_name 
- a service name
.PD 1
.PD 0
.TP
.B info 
- implementation-specific information
.PD 1
.PD 0
.TP
.B port_name 
- a port name from 
.I MPI_Open_port

.PD 1

.SH NOTES

Currently, LAM/MPI ignores any info keys that are passed to this
function.  As such, info keys specific to a different implementation
can safely be passed to this function.  Additionally, the MPI constant
.I MPI_INFO_NULL
can also be used.

The scope of the published name is the LAM universe -- MPI processes
running on any node included from the initial lamboot are capable of
retrieving a name published by 
.I MPI_Publish_name
\&.
Service names stay
in existence until they are either manually removed with
.I MPI_Unpublish_name
or cleaned with the 
.I lamclean
command.  It is a
common mistake to forget to 
.I MPI_Unpublish_name
at the end of a run,
and therefore leave published names in the LAM runtime environment.

.SH NOTES FOR FORTRAN

All MPI routines in Fortran (except for 
.I MPI_WTIME
and 
.I MPI_WTICK
)
have an additional argument 
.I ierr
at the end of the argument list.
.I ierr
is an integer and has the same meaning as the return value of
the routine in C.  In Fortran, MPI routines are subroutines, and are
invoked with the 
.I call
statement.

All MPI objects (e.g., 
.I MPI_Datatype
, 
.I MPI_Comm
) are of type
.I INTEGER
in Fortran.

.SH ERRORS

If an error occurs in an MPI function, the current MPI error handler
is called to handle it.  By default, this error handler aborts the
MPI job.  The error handler may be changed with 
.I MPI_Errhandler_set
;
the predefined error handler 
.I MPI_ERRORS_RETURN
may be used to cause
error values to be returned (in C and Fortran; this error handler is
less useful in with the C++ MPI bindings.  The predefined error
handler 
.I MPI::ERRORS_THROW_EXCEPTIONS
should be used in C++ if the
error value needs to be recovered).  Note that MPI does 
.I not
guarantee that an MPI program can continue past an error.

All MPI routines (except 
.I MPI_Wtime
and 
.I MPI_Wtick
) return an error
value; C routines as the value of the function and Fortran routines
in the last argument.  The C++ bindings for MPI do not return error
values; instead, error values are communicated by throwing exceptions
of type 
.I MPI::Exception
(but not by default).  Exceptions are only
thrown if the error value is not 
.I MPI::SUCCESS
\&.


Note that if the 
.I MPI::ERRORS_RETURN
handler is set in C++, while
MPI functions will return upon an error, there will be no way to
recover what the actual error value was.
.PD 0
.TP
.B MPI_SUCCESS 
- No error; MPI routine completed successfully.
.PD 1
.PD 0
.TP
.B MPI_ERR_ARG 
- Invalid argument.  Some argument is invalid and is not
identified by a specific error class.  This is typically a NULL
pointer or other such error.
.PD 1
.PD 0
.TP
.B MPI_ERR_SERVICE 
- This error class is associated with an error code
that indicates that there was a problem with the service name that
was used.  Depending on the context, this can indicate that the
service name was already published or that the service name was not
yet published.
.PD 1

.SH SEE ALSO
MPI_Lookup_name, MPI_Publish_name
.br

.SH MORE INFORMATION

For more information, please see the official MPI Forum web site,
which contains the text of both the MPI-1 and MPI-2 standards.  These
documents contain detailed information about each MPI function (most
of which is not duplicated in these man pages).

.I http://www.mpi-forum.org/
.SH LOCATION
nameunpub.c
