.TH MPIL_Signal 3 "6/24/2006" "LAM/MPI 7.1.4" "LAM/MPI"
.SH NAME
MPIL_Signal \-  LAM/MPI-specific function to send a LAM signal to a rank in an MPI communicator 
.SH SYNOPSIS
.nf
#include <mpi.h>
int MPIL_Signal(MPI_Comm comm, int rank, int signo)
.fi
.SH INPUT PARAMETERS
.PD 0
.TP
.B comm 
- MPI communicator (handle)
.PD 1
.PD 0
.TP
.B rank 
- rank to send it to
.PD 1
.PD 0
.TP
.B signo 
- signal number
.PD 1

.SH NOTES

An asynchronous signal is delivered from one process to another with
MPIL_Signal().  The target process is selected with a communicator and
a process rank within that communicator.  The remaining argument,
signo, identifies the signal to be delivered.  These signals are
completely apart from the signals provided by the underlying operating
system.  LAM signals, defined in <lam_ksignal.h>, are listed below.

.br
LAM_SIGTRACE   1    unload trace data
.br
LAM_SIGC       2    user defined
.br
LAM_SIGARECV   3    async receive pending
.br
LAM_SIGUDIE    4    terminate
.br
LAM_SIGARREST  5    suspend execution
.br
LAM_SIGRELEASE 6    continue execution
.br
LAM_SIGA       7    user defined
.br
LAM_SIGB       8    user defined
.br
LAM_SIGFUSE    9    node about to die
.br
LAM_SIGSHRINK  10   another node has died

This is a LAM/MPI-specific function.  Most users should not have use
for this function.  If this function is used, it should be used in
conjunction with the 
.I LAM_MPI
C preprocessor macro

.nf
#if LAM_MPI
MPIL_Signal(MPI_COMM_WORLD, 0, LAM_SIGUDIE);
#endif
.fi


.SH NOTES FOR FORTRAN

All MPI routines in Fortran (except for 
.I MPI_WTIME
and 
.I MPI_WTICK
)
have an additional argument 
.I ierr
at the end of the argument list.
.I ierr
is an integer and has the same meaning as the return value of
the routine in C.  In Fortran, MPI routines are subroutines, and are
invoked with the 
.I call
statement.

All MPI objects (e.g., 
.I MPI_Datatype
, 
.I MPI_Comm
) are of type
.I INTEGER
in Fortran.

.SH ERRORS

If an error occurs in an MPI function, the current MPI error handler
is called to handle it.  By default, this error handler aborts the
MPI job.  The error handler may be changed with 
.I MPI_Errhandler_set
;
the predefined error handler 
.I MPI_ERRORS_RETURN
may be used to cause
error values to be returned (in C and Fortran; this error handler is
less useful in with the C++ MPI bindings.  The predefined error
handler 
.I MPI::ERRORS_THROW_EXCEPTIONS
should be used in C++ if the
error value needs to be recovered).  Note that MPI does 
.I not
guarantee that an MPI program can continue past an error.

All MPI routines (except 
.I MPI_Wtime
and 
.I MPI_Wtick
) return an error
value; C routines as the value of the function and Fortran routines
in the last argument.  The C++ bindings for MPI do not return error
values; instead, error values are communicated by throwing exceptions
of type 
.I MPI::Exception
(but not by default).  Exceptions are only
thrown if the error value is not 
.I MPI::SUCCESS
\&.


Note that if the 
.I MPI::ERRORS_RETURN
handler is set in C++, while
MPI functions will return upon an error, there will be no way to
recover what the actual error value was.
.PD 0
.TP
.B MPI_SUCCESS 
- No error; MPI routine completed successfully.
.PD 1
.PD 0
.TP
.B MPI_ERR_COMM 
- Invalid communicator.  A common error is to use a
null communicator in a call (not even allowed in 
.I MPI_Comm_rank
).
.PD 1
.PD 0
.TP
.B MPI_ERR_RANK 
- Invalid source or destination rank.  Ranks must be
between zero and the size of the communicator minus one; ranks in a
receive (
.I MPI_Recv
, 
.I MPI_Irecv
, 
.I MPI_Sendrecv
, etc.) may also be
.I MPI_ANY_SOURCE
\&.

.PD 1
.PD 0
.TP
.B MPI_ERR_OTHER 
- Other error; use 
.I MPI_Error_string
to get more
information about this error code.
.PD 1

.SH SEE ALSO
lam_ksignal
.br
.SH LOCATION
mpil_signal.c
