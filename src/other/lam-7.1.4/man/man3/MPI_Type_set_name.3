.TH MPI_Type_set_name 3 "6/24/2006" "LAM/MPI 7.1.4" "LAM/MPI"
.SH NAME
MPI_Type_set_name \-  Set a name on a datatype 
.SH SYNOPSIS
.nf
#include <mpi.h>
int
MPI_Type_set_name(MPI_Datatype type, char *name)
.fi
.SH INPUT PARAMETERS
.PD 0
.TP
.B type 
- MPI datatype
.PD 1
.PD 0
.TP
.B name 
- Pointer to the name of dataname
.PD 1

.SH NOTES

This function associates a name with a datatype, which can be
useful for debugging purposes.  The function 
.I MPI_Type_get_name
can
be used to retrieve name that was previously set with
.I MPI_Type_set_name
\&.


Named predefined datatypes have the default names of the datatype
name. For example, 
.I MPI_WCHAR
has the default name of 
.I MPI_WCHAR
\&.

It is legal to change any of these names with calls to
.I MPI_Type_set_name
\&.


Names passed in C must include the null terminator, and can be of
maximum length 
.I MPI_MAX_OBJECT_NAME
(including the null terminator).
Names passed in Fortran can also have a maximum length of
.I MPI_MAX_OBJECT_NAME
\&.


Setting a name on a datatype that already has a name associated
with it replaces the old name.

.SH ERRORS

If an error occurs in an MPI function, the current MPI error handler
is called to handle it.  By default, this error handler aborts the
MPI job.  The error handler may be changed with 
.I MPI_Errhandler_set
;
the predefined error handler 
.I MPI_ERRORS_RETURN
may be used to cause
error values to be returned (in C and Fortran; this error handler is
less useful in with the C++ MPI bindings.  The predefined error
handler 
.I MPI::ERRORS_THROW_EXCEPTIONS
should be used in C++ if the
error value needs to be recovered).  Note that MPI does 
.I not
guarantee that an MPI program can continue past an error.

All MPI routines (except 
.I MPI_Wtime
and 
.I MPI_Wtick
) return an error
value; C routines as the value of the function and Fortran routines
in the last argument.  The C++ bindings for MPI do not return error
values; instead, error values are communicated by throwing exceptions
of type 
.I MPI::Exception
(but not by default).  Exceptions are only
thrown if the error value is not 
.I MPI::SUCCESS
\&.


Note that if the 
.I MPI::ERRORS_RETURN
handler is set in C++, while
MPI functions will return upon an error, there will be no way to
recover what the actual error value was.
.PD 0
.TP
.B MPI_SUCCESS 
- No error; MPI routine completed successfully.
.PD 1
.PD 0
.TP
.B MPI_ERR_TYPE 
- Invalid datatype argument.  May be an uncommitted
MPI_Datatype (see 
.I MPI_Type_commit
).
.PD 1
.PD 0
.TP
.B MPI_ERR_ARG 
- Invalid argument.  Some argument is invalid and is not
identified by a specific error class.  This is typically a NULL
pointer or other such error.
.PD 1

.SH SEE ALSO
MPI_Comm_set_name, MPI_Comm_get_name, MPI_Type_get_name, MPI_Win_get_name, MPI_Win_set_name
.br

.SH MORE INFORMATION

For more information, please see the official MPI Forum web site,
which contains the text of both the MPI-1 and MPI-2 standards.  These
documents contain detailed information about each MPI function (most
of which is not duplicated in these man pages).

.I http://www.mpi-forum.org/
.SH LOCATION
tsetname.c
