.TH XMPI_Coloroff 3 "6/24/2006" "LAM/MPI 7.1.4" "LAM/MPI"
.SH NAME
XMPI_Coloroff \-  LAM/MPI-specific function to disable a color in the XMPI trace stream. 
.SH SYNOPSIS
.nf
#include <mpi.h>
int 
XMPI_Coloroff()
.fi
.SH NOTES

The LAM implementation of MPI is integrated with the XMPI run/debug
viewer.  It can generate tracefiles and on-the-fly trace streams
suitable for display in XMPI.

A new functionality in XMPI is the ability to enable and disable
select colors in the trace stream.  LAM/MPI allows this functionality
with the 
.I XMPI_Coloron
and 
.I XMPI_Coloroff
functions.

.I XMPI_Coloron
is called with 
.I red
, 
.I green
, and 
.I blue
parameters.
Each value may be from 0 to 255.  The resulting RGB composite will
become activated for that rank at that point in time.  Enabling and
disabling colors is a local action; the calls will return
immediately.  The color will be activated or deactivated on the
timeline corresponding to the rank that invoked 
.I XMPI_Coloron
/
.I XMPI_Colorff
in the XMPI trace window.

Only one color is active at a time.  However, 
.I XMPI_Coloron
may be
invoked multiple times to build a stack of colors.  
.I XMPI_Coloroff
will pop the last color off the stack and make the previous color
active.

If this function is invoked and tracing is not active, the color
deactivation is ignored.

There is no profiling version of this function.

This is a LAM/MPI-specific function and is intended mainly for use
with XMPI.  If this function is used, it should be used in conjunction
with the 
.I LAM_MPI
C preprocessor macro

.nf
#if LAM_MPI
XMPI_Coloroff();
#endif
.fi


.SH NOTES FOR FORTRAN

All MPI routines in Fortran (except for 
.I MPI_WTIME
and 
.I MPI_WTICK
)
have an additional argument 
.I ierr
at the end of the argument list.
.I ierr
is an integer and has the same meaning as the return value of
the routine in C.  In Fortran, MPI routines are subroutines, and are
invoked with the 
.I call
statement.

All MPI objects (e.g., 
.I MPI_Datatype
, 
.I MPI_Comm
) are of type
.I INTEGER
in Fortran.

.SH ERRORS

If an error occurs in an MPI function, the current MPI error handler
is called to handle it.  By default, this error handler aborts the
MPI job.  The error handler may be changed with 
.I MPI_Errhandler_set
;
the predefined error handler 
.I MPI_ERRORS_RETURN
may be used to cause
error values to be returned (in C and Fortran; this error handler is
less useful in with the C++ MPI bindings.  The predefined error
handler 
.I MPI::ERRORS_THROW_EXCEPTIONS
should be used in C++ if the
error value needs to be recovered).  Note that MPI does 
.I not
guarantee that an MPI program can continue past an error.

All MPI routines (except 
.I MPI_Wtime
and 
.I MPI_Wtick
) return an error
value; C routines as the value of the function and Fortran routines
in the last argument.  The C++ bindings for MPI do not return error
values; instead, error values are communicated by throwing exceptions
of type 
.I MPI::Exception
(but not by default).  Exceptions are only
thrown if the error value is not 
.I MPI::SUCCESS
\&.


Note that if the 
.I MPI::ERRORS_RETURN
handler is set in C++, while
MPI functions will return upon an error, there will be no way to
recover what the actual error value was.
.PD 0
.TP
.B MPI_SUCCESS 
- No error; MPI routine completed successfully.
.PD 1
.PD 0
.TP
.B MPI_ERR_INTERN 
- An internal error has been detected.  This is
fatal.  Please send a bug report to the LAM mailing list (see
.I http://www.lam-mpi.org/contact.php
). 
.PD 1

.SH SEE ALSO
XMPI_Buoy, XMPI_Coloron
.br
.SH LOCATION
xcoloroff.c
