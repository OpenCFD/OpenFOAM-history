dnl -*- shell-script -*-
dnl
dnl Copyright (c) 2001-2004 The Trustees of Indiana University.  
dnl                         All rights reserved.
dnl Copyright (c) 1998-2001 University of Notre Dame. 
dnl                         All rights reserved.
dnl Copyright (c) 1994-1998 The Ohio State University.  
dnl                         All rights reserved.
dnl 
dnl This file is part of the LAM/MPI software package.  For license
dnl information, see the LICENSE file in the top level directory of the
dnl LAM/MPI source distribution.
dnl
dnl $Id: configure.stub,v 1.2 2004/01/20 04:26:01 jsquyres Exp $
dnl

#
# Include some additional m4 files
#

sinclude(../../../../config/lam_get_shmmax.m4)
sinclude(../../../../config/lam_check_sysv_semaphores.m4)
sinclude(../../../../config/lam_check_sysv_shmem.m4)
sinclude(config/lam_rpi_usysv_setup.m4)
sinclude(config/lam_rpi_tcp_setup.m4)

#
# Main function
#

AC_DEFUN([SSI_CONFIGURE_STUB],[

# We need the assembler for all our assembly files.
AM_PROG_AS
AC_CHECK_SIZEOF(long)

LAM_ASSEMBLY_TYPE=
LAM_ASSEMBLY_FORMAT=
case "$host" in
    powerpc-*darwin*)
        LAM_ASSEMBLY_TYPE="powerpc"
        LAM_ASSEMBLY_FORMAT="powerpc-darwin"
    ;;
    powerpc-*linux-*)
        LAM_ASSEMBLY_TYPE="powerpc"
        LAM_ASSEMBLY_FORMAT="powerpc-linux"
    ;;
    powerpc-*aix*)
        LAM_ASSEMBLY_TYPE="powerpc"
        if test "$ac_cv_sizeof_long" = "4" ; then
            LAM_ASSEMBLY_FORMAT="powerpc-aix"
        else
            LAM_ASSEMBLY_FORMAT="powerpc-aix64"
        fi
    ;;
    *)
        LAM_ASSEMBLY_TYPE="none"
        LAM_ASSEMBLY_FORMAT="none"
    ;;
esac

AC_MSG_CHECKING([how to force write ordering])
AC_MSG_RESULT([$LAM_ASSEMBLY_TYPE])

if test "$LAM_ASSEMBLY_TYPE" = "powerpc" ; then
    LAM_ASSEMBLY_TYPE_POWERPC=1
else
    LAM_ASSEMBLY_TYPE_POWERPC=0
fi
AC_DEFINE_UNQUOTED(LAM_ASSEMBLY_TYPE_POWERPC, 
                    $LAM_ASSEMBLY_TYPE_POWERPC,
                    [Use powerpc instructions to force write ordering])
AM_CONDITIONAL(LAM_ASSEMBLY_POWERPC_DARWIN, 
                    test "$LAM_ASSEMBLY_FORMAT" = "powerpc-darwin")
AM_CONDITIONAL(LAM_ASSEMBLY_POWERPC_LINUX,
                    test "$LAM_ASSEMBLY_FORMAT" = "powerpc-linux")
AM_CONDITIONAL(LAM_ASSEMBLY_POWERPC_AIX,
                    test "$LAM_ASSEMBLY_FORMAT" = "powerpc-aix")
AM_CONDITIONAL(LAM_ASSEMBLY_POWERPC_AIX64,
                    test "$LAM_ASSEMBLY_FORMAT" = "powerpc-aix64")


#
# sysv rpi configure.stub
#

# config/lam_rpi_tcp_setup.m4
LAM_RPI_TCP_SETUP

# config/lam_rpi_usysv_setup.m4
LAM_RPI_USYSV_SETUP

#
# done with sysv rpi configure.stub
#
])dnl


#
# Since SSI_CONFIGURE_STUB is not invoked when we are configured with
# --enable dist, we provide this alternate macro is that invoked
# instead, that guarantees that the relevant AM_CONDITIONALs are set.
# 

AC_DEFUN([SSI_CONFIGURE_DIST_STUB],[

AM_CONDITIONAL(LAM_ASSEMBLY_POWERPC_DARWIN, [test "0" = "1"])
AM_CONDITIONAL(LAM_ASSEMBLY_POWERPC_LINUX, [test "0" = "1"])
AM_CONDITIONAL(LAM_ASSEMBLY_POWERPC_AIX, [test "0" = "1"])
AM_CONDITIONAL(LAM_ASSEMBLY_POWERPC_AIX64, [test "0" = "1"])

#
# done with gm rpi configure-dist.stub
#
])dnl


