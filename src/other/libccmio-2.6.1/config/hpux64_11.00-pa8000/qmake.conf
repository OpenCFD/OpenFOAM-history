#
# $Id: qmake.conf,v 1.5 2006/03/24 13:51:52 wo Exp $
#
# qmake configuration for hpux-acc
#
# We define _POSIX_C_SOURCE to 199506L when using threads, therefore
# we also need to redefine _HPUX_SOURCE. See pthread(3t) for more details.
#
# From the "HP aC++ Online Programmer's Guide":
# 	Using +DS to Specify Instruction Scheduling:
# 	* By default, the compiler performs scheduling tuned for the system
# 	  on which you are compiling, or, if specified, tuned for the setting
# 	  of the +DA option.
#
# From the online "C/HP-UX Reference Manual":
#	-Aa
# 	  Enables strict ANSI C compliance.
# 	-Ae
# 	  Enables ANSI C compliance, HP value-added features (as described
# 	  for +e option), and _HPUX_SOURCE name space macro. It is equivalent
# 	  to -Aa +e -D_HPUX_SOURCE.
# 	+e
# 	  Enables the following HP value added features while compiling in
# 	  ANSI C mode: sized enum, long long, long pointers, compiler supplied
# 	  defaults for missing arguments to intrinsic calls, and $ in identifier
# 	  HP C extensions.
#

MAKEFILE_GENERATOR	= UNIX
TEMPLATE		= app
CONFIG			+= qt warn_on release link_prl

QMAKE_CC		= /opt/ansic/bin/cc
QMAKE_LEX		= flex
QMAKE_LEXFLAGS		= 
QMAKE_YACC		= yacc
QMAKE_YACCFLAGS		= -d
QMAKE_CFLAGS		= +DA2.0W +DS2.0W +z +p +Olibcalls -D_LARGEFILE64_SOURCE -DLARGE_FILES -w
QMAKE_CFLAGS_WARN_ON	=
QMAKE_CFLAGS_WARN_OFF	= -w
QMAKE_CFLAGS_RELEASE	= +O2 +Odataprefetch
QMAKE_CFLAGS_DEBUG	= -g
QMAKE_CFLAGS_SHLIB	= +Z
QMAKE_CFLAGS_YACC	=
QMAKE_CFLAGS_THREAD	= -D_POSIX_C_SOURCE=199506L -D_HPUX_SOURCE

QMAKE_CXX		= /opt/aCC/bin/aCC
QMAKE_CXXFLAGS		= -AA $$QMAKE_CFLAGS -D__STRICT_ANSI__ -D_HPUX_SOURCE
QMAKE_CXXFLAGS_DEPS	= +M
QMAKE_CXXFLAGS_WARN_ON	= $$QMAKE_CFLAGS_WARN_ON
QMAKE_CXXFLAGS_WARN_OFF	= $$QMAKE_CFLAGS_WARN_OFF
QMAKE_CXXFLAGS_RELEASE	= $$QMAKE_CFLAGS_RELEASE
QMAKE_CXXFLAGS_DEBUG	= $$QMAKE_CFLAGS_DEBUG
QMAKE_CXXFLAGS_SHLIB	= $$QMAKE_CFLAGS_SHLIB
QMAKE_CXXFLAGS_YACC	= $$QMAKE_CFLAGS_YACC
QMAKE_CXXFLAGS_THREAD	= $$QMAKE_CFLAGS_THREAD

QMAKE_INCDIR		=
QMAKE_LIBDIR		=
QMAKE_INCDIR_X11	= /usr/include/X11R6
QMAKE_LIBDIR_X11	= /usr/lib/X11R6
QMAKE_INCDIR_QT		= $(QTDIR)/include
QMAKE_LIBDIR_QT		= $(QTDIR)/lib
QMAKE_INCDIR_OPENGL	= /opt/graphics/OpenGL/include /usr/contrib/X11R6/include
QMAKE_LIBDIR_OPENGL	= /opt/graphics/OpenGL/lib /usr/contrib/X11R6/lib

QMAKE_LINK		= /opt/aCC/bin/aCC
QMAKE_LINK_SHLIB	= /opt/aCC/bin/aCC
QMAKE_LFLAGS		= -AA +DA2.0W +DS2.0W -Wl,+s
QMAKE_LFLAGS_RELEASE	= +O2
QMAKE_LFLAGS_DEBUG	= -g
QMAKE_LFLAGS_SHLIB	= -b -Wl,-a,shared_archive
QMAKE_LFLAGS_PLUGIN	= $$QMAKE_LFLAGS_SHLIB
QMAKE_LFLAGS_SONAME	= -Wl,+h,
QMAKE_LFLAGS_THREAD	=
QMAKE_RPATH		= -Wl,+b,
QMAKE_HPUX_SHLIB	= 1
QMAKE_EXTENSION_SHLIB	= sl

QMAKE_LIBS		= -lm -lnsl
QMAKE_LIBS_DYNLOAD	= -ldld
QMAKE_LIBS_X11		= -lXext -lX11
QMAKE_LIBS_X11SM	= -lSM -lICE
QMAKE_LIBS_QT		= -lqt
QMAKE_LIBS_QT_THREAD	= -lqt-mt
QMAKE_LIBS_OPENGL	= -lGLU -lGL -lXmu -lXt
QMAKE_LIBS_OPENGL_QT	= -lGL -lXmu -lXt
QMAKE_LIBS_THREAD	= -lpthread
QMAKE_LIBS_YACC		= -ly

QMAKE_MOC		= $(QTDIR)/bin/moc
QMAKE_UIC		= $(QTDIR)/bin/uic

QMAKE_AR		= ar cqs
QMAKE_RANLIB		=

QMAKE_TAR		= tar -cf
QMAKE_GZIP		= gzip -9f

QMAKE_COPY		= cp -f -p
QMAKE_MOVE		= mv -f
QMAKE_DEL_FILE		= rm -f
QMAKE_DEL_DIR		= rmdir
QMAKE_CHK_DIR_EXISTS	= test -d
QMAKE_MKDIR		= mkdir -p

# added options for ccmio library:
DEFINES                += HPUX64_11_00_PA8000
MK_BUILDNAME	        = hpux64_11.00-pa8000
MK_LIBS_STLPORT         = -lstlport_aCC
MK_LIBS_STLPORT_DEBUG   = -lstlport_aCC_stldebug
