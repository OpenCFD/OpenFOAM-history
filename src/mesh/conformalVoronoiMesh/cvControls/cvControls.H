/*---------------------------------------------------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     |
    \\  /    A nd           | Copyright (C) 2009-2011 OpenCFD Ltd.
     \\/     M anipulation  |
-------------------------------------------------------------------------------
License
    This file is part of OpenFOAM.

    OpenFOAM is free software: you can redistribute it and/or modify it
    under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    OpenFOAM is distributed in the hope that it will be useful, but WITHOUT
    ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
    FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
    for more details.

    You should have received a copy of the GNU General Public License
    along with OpenFOAM.  If not, see <http://www.gnu.org/licenses/>.

Class
    Foam::cvControls

Description
    Controls for the conformalVoronoiMesh mesh generator

SourceFiles
    cvControls.C

\*---------------------------------------------------------------------------*/

#ifndef cvControls_H
#define cvControls_H

#include "dictionary.H"
#include "Switch.H"

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

namespace Foam
{

// Forward declaration of classes
class conformalVoronoiMesh;

/*---------------------------------------------------------------------------*\
                          Class cvControls Declaration
\*---------------------------------------------------------------------------*/

class cvControls
{
    // Private data

        //- Reference to the conformalVoronoiMesh holding this cvControls object
        const conformalVoronoiMesh& cvMesh_;

        //- Reference to the cvMeshDict
        const dictionary& cvMeshDict_;

        // Surface conformation controls

            //- Point pair spacing coefficient - fraction of the local target
            //  cell size
            scalar pointPairDistanceCoeff_;

            //- Distance along feature edge to place mixed feature point
            //  conformation groups - to be multiple of pointPairDistanceCoeff_.
            scalar mixedFeaturePointPPDistanceCoeff_;

            //- Distance to a feature point within which surface and edge
            //  conformation points are excluded - fraction of the local target
            //  cell size
            scalar featurePointExclusionDistanceCoeff_;

            //- Distance to an existing feature edge conformation location
            //  within which other edge conformation location are excluded -
            //  fraction of the local target cell size
            scalar featureEdgeExclusionDistanceCoeff_;

            //- Surface search distance coefficient - faction of the local
            //  target cell size
            scalar surfaceSearchDistanceCoeff_;

            //- Maximum allowable protrusion through the surface before
            //  conformation points are added - fraction of the local target
            //  cell size
            scalar maxSurfaceProtrusionCoeff_;

            //- Maximum quadrant angle allowed at a concave edge before
            //  additional "mitering" lines are added
            scalar maxQuadAngle_;

            //- Now often to rebuild the surface conformation
            label surfaceConformationRebuildFrequency_;


            // Controls for coarse surface conformation

                //- Distance to search for feature edges near to
                //  surface protrusions - fraction of the local target
                //  cell size. Coarse conformation, initial protrusion
                //  tests.
                scalar edgeSearchDistCoeffSqr_coarse_initial_;

                //- Distance to search for feature edges near to
                //  surface protrusions - fraction of the local target
                //  cell size. Coarse conformation, iteration
                //  protrusion tests.
                scalar edgeSearchDistCoeffSqr_coarse_iteration_;

                //- Proximity to a feature edge where a surface hit is
                //  not created, only the edge conformation is created
                //  - fraction of the local target cell size. Coarse
                //  conformation, initial protrusion tests.
                scalar surfacePtReplaceDistCoeffSqr_coarse_initial_;

                //- Proximity to a feature edge where a surface hit is
                //  not created, only the edge conformation is created
                //  - fraction of the local target cell size. Coarse
                //  conformation, iteration protrusion tests.
                scalar surfacePtReplaceDistCoeffSqr_coarse_iteration_;

                //- Maximum allowed number coarse surface conformation
                //  iterations.
                label maxConformationIterations_coarse_;

                //- Termination criterion for coarse surface
                //  conformation iterations.  When the number of
                //  surface protrusions drops below this ratio of the
                //  initial number of protrusions.
                scalar iterationToIntialHitRatioLimit_coarse_;


            // Controls for fine surface conformation

                //- Distance to search for feature edges near to
                //  surface protrusions - fraction of the local target
                //  cell size. Fine conformation, initial protrusion
                //  tests.
                scalar edgeSearchDistCoeffSqr_fine_initial_;

                //- Distance to search for feature edges near to
                //  surface protrusions - fraction of the local target
                //  cell size. Fine conformation, iteration protrusion
                //  tests.
                scalar edgeSearchDistCoeffSqr_fine_iteration_;

                //- Proximity to a feature edge where a surface hit is
                //  not created, only the edge conformation is created
                //  - fraction of the local target cell size. Fine
                //  conformation, initial protrusion tests.
                scalar surfacePtReplaceDistCoeffSqr_fine_initial_;

                //- Proximity to a feature edge where a surface hit is
                //  not created, only the edge conformation is created
                //  - fraction of the local target cell size. Fine
                //  conformation, iteration protrusion tests.
                scalar surfacePtReplaceDistCoeffSqr_fine_iteration_;

                //- Maximum allowed number fine surface conformation
                //  iterations.
                label maxConformationIterations_fine_;

                //- Termination criterion for fine surface conformation
                //  iterations.  When the number of surface protrusions
                //  drops below this ratio of the initial number of
                //  protrusions.
                scalar iterationToIntialHitRatioLimit_fine_;


    // Motion control controls

        //- Switch to control the output of obj files for debug
        Switch objOutput_;

        //- Switch to control the reporting of detailed timeChecks
        Switch timeChecks_;

        //- Number of "spokes" to use to search for secondary alignment
        //  direction
        label alignmentSearchSpokes_;

        //- cosine of angle of alignment with required direction within which a
        //  face will be accepted for rotation
        scalar cosAlignmentAcceptanceAngle_;

        //- Now often to re-store the size and alignment data
        label sizeAndAlignmentRebuildFrequency_;

        // Point insertion criteria

            //- Length between Delaunay vertices above which a new Dv should be
            //  inserted - fraction of the local target cell size
            scalar insertionDistCoeff_;

            //- Minimum dual face area corresponding to long Delaunay edge where
            //  a new Dv is to be inserted - fraction of the local target cell
            //  size
            scalar faceAreaRatioCoeff_;

            //- cosine of the angle of alignment with the required direction
            //  within which a long De will be accepted for a new Dv insertion
            scalar cosInsertionAcceptanceAngle_;


        // Point removal criteria

            //- Length between Delaunay vertices below which a Dv should be
            //  removed - fraction of the local target cell size
            scalar removalDistCoeff_;


    // polyMesh filtering controls

        //- Upper limit on the size of faces to be filtered from,
        //  fraction of the local target cell size
        scalar filterSizeCoeff_;

        //- Upper limit on how close two dual vertices can be before
        //  being merged, fraction of the local target cell size
        scalar mergeClosenessCoeff_;

        //- If the mesh quality criteria cannot be satisfied, continue
        //  with filtering anyway?
        Switch continueFilteringOnBadInitialPolyMesh_;

        //- When a face is "bad", what fraction should the filterSizeCoeff_ be
        //  reduced by.  Recursive, so for a filterCount value of fC, the
        //  filterSizeCoeff is reduced by pow(filterErrorReductionCoeff_, fC)
        scalar filterErrorReductionCoeff_;

        //- Maximum number of filterCount applications before a face
        //  is not attempted to be filtered
        label filterCountSkipThreshold_;

        //- Maximum number of permissible iterations of the face collapse
        //  algorithm.  The value to choose will be related the maximum number
        //  of points on a face that is to be collapsed and how many faces
        //  around it need to be collapsed.
        label maxCollapseIterations_;

        //- The maximum allowed angle between a boundary face normal and the
        //  local surface normal before face will be aggressively collapsed
        scalar surfaceStepFaceAngle_;

        //- Defining how close to the midpoint (M) of the projected
        //  vertices line a projected vertex (X) can be before making
        //  an edge collapse invalid
        //
        //  X---X-g----------------M----X-----------g----X--X
        //
        //  Only allow a collapse if all projected vertices are
        //  outwith edgeCollapseGuardFraction (g) of the distance form
        //  the face centre to the furthest vertex in the considered
        //  direction
        scalar edgeCollapseGuardFraction_;

        //- The maximum allowed length of the longest edge of a face
        //  to enable a face to be collapsed to a point, fraction of
        //  the local target cell size
        scalar maxCollapseFaceToPointSideLengthCoeff_;


    // Private Member Functions

        //- Disallow default bitwise copy construct
        cvControls(const cvControls&);

        //- Disallow default bitwise assignment
        void operator=(const cvControls&);


public:

   // Constructors

        //- Construct from references to conformalVoronoiMesh and dictionary
        cvControls
        (
            const conformalVoronoiMesh& cvMesh,
            const dictionary& cvMeshDict
        );


    //- Destructor
    ~cvControls();


    // Member Functions

        // Access

            //- Return the cvMeshDict
            inline const dictionary& cvMeshDict() const;

            //- Return the pointPairDistanceCoeff
            inline scalar pointPairDistanceCoeff() const;

            //- Return the mixedFeaturePointPPDistanceCoeff
            inline scalar mixedFeaturePointPPDistanceCoeff() const;

            //- Return the featurePointExclusionDistanceCoeff
            inline scalar featurePointExclusionDistanceCoeff() const;

            //- Return the featureEdgeExclusionDistanceCoeff
            inline scalar featureEdgeExclusionDistanceCoeff() const;

            //- Return the surfaceSearchDistanceCoeff
            inline scalar surfaceSearchDistanceCoeff() const;

            //- Return the maxSurfaceProtrusionCoeff
            inline scalar maxSurfaceProtrusionCoeff() const;

            //- Return the maxQuadAngle
            inline scalar maxQuadAngle() const;

            //- Return the surfaceConformationRebuildFrequency
            inline label surfaceConformationRebuildFrequency() const;

            //- Return the edgeSearchDistCoeffSqr for initial
            //  conformation for the given reconformationMode.
            scalar edgeSearchDistCoeffSqrInitial(int reconfMode) const;

            //- Return the edgeSearchDistCoeffSqr for conformation
            //  iterations for the given reconformationMode.
            scalar edgeSearchDistCoeffSqrIteration(int reconfMode) const;

            //- Return the surfacePtReplaceDistCoeffSqr for initial
            //  conformation for the given reconformationMode.
            scalar surfacePtReplaceDistCoeffSqrInitial(int reconfMode) const;

            //- Return the surfacePtReplaceDistCoeffSqr for
            //  conformation iterations for the given
            //  reconformationMode.
            scalar surfacePtReplaceDistCoeffSqrIteration(int reconfMode) const;

            //- Return the maxConformationIterations for the given
            //  reconformationMode.
            label maxConformationIterations(int reconfMode) const;

            //- Return the iterationToIntialHitRatioLimit for the
            //  given reconformationMode.
            scalar iterationToIntialHitRatioLimit(int reconfMode) const;

            //- Return the objOutput Switch
            inline Switch objOutput() const;

            //- Return the timeChecks Switch
            inline Switch timeChecks() const;

            //- Return the number of alignmentSearchSpokes to use
            inline label alignmentSearchSpokes() const;

            //- Return the cosAlignmentAcceptanceAngle
            inline scalar cosAlignmentAcceptanceAngle() const;

            //- Return the sizeAndAlignmentRebuildFrequency
            inline label sizeAndAlignmentRebuildFrequency() const;

            //- Return the insertionDistCoeff
            inline scalar insertionDistCoeff() const;

            //- Return the faceAreaRatioCoeff
            inline scalar faceAreaRatioCoeff() const;

            //- Return the cosInsertionAcceptanceAngle
            inline scalar cosInsertionAcceptanceAngle() const;

            //- Return removalDistCoeff
            inline scalar removalDistCoeff() const;

            //- Return the filterSizeCoeff
            inline scalar filterSizeCoeff() const;

            //- Return the mergeClosenessCoeff
            inline scalar mergeClosenessCoeff() const;

            //- Return the continueFilteringOnBadInitialPolyMesh Switch
            inline Switch continueFilteringOnBadInitialPolyMesh() const;

            //- Return the filterErrorReductionCoeff
            inline scalar filterErrorReductionCoeff() const;

            //- Return the maxCollapseIterations
            inline label maxCollapseIterations() const;

            //- Return the filterCountSkipThreshold
            inline label filterCountSkipThreshold() const;

            //- Return the maxCollapseIterations
            inline label minCollapseFaces() const;

            //- Return the surfaceStepFaceAngle
            inline scalar surfaceStepFaceAngle() const;

            //- Return the edgeCollapseGuardFraction
            inline scalar edgeCollapseGuardFraction() const;

            //- Return the maxCollapseFaceToPointSideLengthCoeff
            inline scalar maxCollapseFaceToPointSideLengthCoeff() const;
};


// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

} // End namespace Foam

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

#include "cvControlsI.H"

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

#endif

// ************************************************************************* //
