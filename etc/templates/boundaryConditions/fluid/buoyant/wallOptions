/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  2.2.0                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "templates";
    object      wallOptions;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

wallFunction
{
    highReynolds
    {
        k
        {
            type        compressible::kqRWallFunction;
            value       ${:VALUE.k};
        }
        epsilon
        {
            type        compressible::epsilonWallFunction;
            value       ${:VALUE.epsilon};
        }
        omega
        {
            type        compressible::omegaWallFunction;
            value       ${:VALUE.omega};
        }
        mut
        {
            type        mutkWallFunction;
            value       ${:VALUE.mut};
        }
        alphat
        {
            type        compressible::alphatWallFunction;
            value       ${:VALUE.alphat};
        }
    }
    lowReynolds
    {
        k
        {
            type        fixedValue;
            value       uniform 0;
        }
        epsilon
        {
            type        fixedValue;
            value       uniform 0;
        }
        omega
        {
            type        fixedValue;
            value       uniform 0;
        }
        mut
        {
            type        fixedValue;
            value       uniform 0;
        }
        alphat
        {
            type        fixedValue;
            value       uniform 0;
        }
    }
}


heatTransfer
{
    adiabatic
    {
        T
        {
            type        zeroGradient;
        }
    }
    fixedTemperature
    {
        T
        {
            type        fixedValue;
            value       ${:VALUE.T};
        }
    }
    thermalCoupled
    {
        T
        {
            type        compressible::turbulentTemperatureCoupledBaffleMixed;
            value       ${:VALUE.T};
            Tnbr        T;
            kappa       fluidThermo;
            kappaName   none;
        }
    }
}


// ************************************************************************* //
