#!/bin/sh
#------------------------------------------------------------------------------
# =========                 |
# \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
#  \\    /   O peration     |
#   \\  /    A nd           | Copyright (C) 1991-2010 OpenCFD Ltd.
#    \\/     M anipulation  |
#-------------------------------------------------------------------------------
# License
#     This file is part of OpenFOAM.
#
#     OpenFOAM is free software: you can redistribute it and/or modify it
#     under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     OpenFOAM is distributed in the hope that it will be useful, but WITHOUT
#     ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
#     FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
#     for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with OpenFOAM.  If not, see <http://www.gnu.org/licenses/>.
#
# Script
#     foamExec
#
# Description
#     Usage: foamExec [-v foamVersion] <foamCommand> ...
#
#     Runs the <foamVersion> version of executable <foamCommand>
#     with the rest of the arguments.
#
#     Can also be used for parallel runs e.g.
#     mpirun -np <nProcs> \
#         foamExec -v <foamVersion> <foamCommand> ... -parallel
#
#     Note: - not consistent with foamEtcFiles - does not search 'site'
#             directories
#           - version switch -v will not work with the debian naming
#             openfoamXXX
#------------------------------------------------------------------------------
usage() {
    while [ "$#" -ge 1 ]; do echo "$1"; shift; done
    cat<<USAGE

Usage: ${0##*/} [OPTION] <application> ...

options:
  -version <ver>    specify an alternative OpenFOAM version
                    (default: taken from \$0 parameter)
  -help             this usage

* run a particular OpenFOAM version of <application>

USAGE
    exit 1
}

# This script must exist in <foamInstall>/OpenFOAM-<VERSION>/bin/
# or <foamInstall>/openfoam<VERSION>/bin/ (for the debian version)
#

# the bindir:
binDir="${0%/*}"

# the project dir:
projectDir="${binDir%/bin}"
export WM_PROJECT_DIR="$projectDir"

# the prefix dir (same as foamInstall):
prefixDir="${projectDir%/*}"
foamInstall="$prefixDir"

# the name used for the project directory
projectDirName="${projectDir##*/}"

#
# handle standard and debian naming convention
#
case "$projectDirName" in
OpenFOAM-*)         # standard naming convention OpenFOAM-<VERSION>
    projectNamePrefix="OpenFOAM-"
    version="${projectDirName##OpenFOAM-}"
    versionNum=$version
    ;;

openfoam[0-9]*)     # debian naming convention 'openfoam<VERSION>'
    projectNamePrefix="openfoam"
    versionNum="${projectDirName##openfoam}"
    version=$WM_PROJECT_DIR
    ;;
*)
    echo "Error : unknown/unsupported naming convention"
    exit 1
    ;;
esac


# debugging:
# echo "Installed locations:"
# for i in projectDir prefixDir foamInstall projectDirName version versionNum
# do
#     eval echo "$i=\$$i"
# done


# parse options
while [ "$#" -gt 0 ]
do
    case "$1" in
    -h | -help)
        usage
        ;;
    -v | version)
        [ "$#" -ge 2 ] || usage "'$1' option requires an argument"
        version=$2
        versionNum=$version
        shift 2
        ;;
    --)
        shift
        break
        ;;
    -*)
        usage "invalid option '$1'"
        ;;
    *)
        break
        ;;
    esac
done

[ "$#" -ge 1 ] || usage "no application specified"


# find OpenFOAM settings (bashrc)
foamDotFile="$($binDir/foamEtcFile -version $version bashrc)"
[ $? -eq 0 ] || {
    echo "Error : bashrc file could not be found for OpenFOAM-$version" 1>&2
    exit 1
}

# preserve arguments (can otherwise get lost when sourcing the foamDotFile)
args="$*"
. $foamDotFile

# execute
exec $args

#------------------------------------------------------------------------------
