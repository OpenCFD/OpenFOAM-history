#!/bin/sh
#------------------------------------------------------------------------------
# =========                 |
# \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
#  \\    /   O peration     |
#   \\  /    A nd           | Copyright (C) 1991-2008 OpenCFD Ltd.
#    \\/     M anipulation  |
#-------------------------------------------------------------------------------
# License
#     This file is part of OpenFOAM.
#
#     OpenFOAM is free software; you can redistribute it and/or modify it
#     under the terms of the GNU General Public License as published by the
#     Free Software Foundation; either version 2 of the License, or (at your
#     option) any later version.
#
#     OpenFOAM is distributed in the hope that it will be useful, but WITHOUT
#     ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
#     FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
#     for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with OpenFOAM; if not, write to the Free Software Foundation,
#     Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
#
# Script
#     foamClearPolyMesh
#
# Description
#    Remove the contents of the constant/polyMesh directory
#    as per the Foam::polyMesh::removeFiles() method.
#
#------------------------------------------------------------------------------
usage() {
   while [ "$#" -ge 1 ]; do echo "$1" 1>&2; shift; done
   cat <<USAGE 1>&2

usage: ${0##*/} [-case dir]

    Remove the contents of the constant/polyMesh directory
    as per the Foam::polyMesh::removeFiles() method.

USAGE
   exit 1
}

unset caseDir

# parse a single option
if [ "$#" -gt 0 ]; then
   case "$1" in
   -h | -help)
      usage
      ;;
   -case)
      shift
      caseDir=$1
      [ "$#" -ge 1 ] || usage "'-case' option requires an argument"
      cd "$caseDir" 2>/dev/null || usage "directory does not exist:  '$caseDir'"
      ;;
   *)
      usage "unknown option/argument: '$*'"
      ;;
   esac
fi

# meshDir is only set if -case was specified: insist upon 'constant/polyMesh'
if [ -n "$caseDir" ]
then
   # require constant/polyMesh
   meshDir=constant/polyMesh

   if [ ! -d "$meshDir" ]
   then
      echo "Error: no '$meshDir' in $caseDir" 1>&2
      exit 1
   fi
else
   if [ -d constant/polyMesh ]
   then
      # use constant/polyMesh
      meshDir=constant/polyMesh
   elif [ -d polyMesh ]
   then
      # likely already in constant/
      meshDir=polyMesh
   elif [ "${PWD##*/}" = polyMesh ]
   then
      # apparently already within polyMesh/
      meshDir=.
   else
      echo "Error: no appropriate 'polyMesh/' directory found" 1>&2
      exit 1
   fi
fi


#
# remove files and subdirectories
#
echo "Clearing ${caseDir:-.}/$meshDir" 1>&2

for i in \
   points \
   faces \
   owner \
   neighbour \
   cells \
   boundary \
   pointZones \
   faceZones \
   cellZones \
   meshModifiers \
   parallelData \
   sets \
;
do
   rm -rf $meshDir/$i
done

#------------------------------------------------------------------------------
