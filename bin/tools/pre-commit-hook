#!/bin/bash
#---------------------------------*- sh -*-------------------------------------
# =========                 |
# \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
#  \\    /   O peration     |
#   \\  /    A nd           | Copyright (C) 2010-2010 OpenCFD Ltd.
#    \\/     M anipulation  |
#------------------------------------------------------------------------------
# License
#     This file is part of OpenFOAM.
#
#     OpenFOAM is free software: you can redistribute it and/or modify it
#     under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     OpenFOAM is distributed in the hope that it will be useful, but WITHOUT
#     ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
#     FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
#     for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with OpenFOAM.  If not, see <http://www.gnu.org/licenses/>.
#
# Script
#     pre-commit-hook
#
# Description
#     pre-commit hook for git.
#     Copy or link this file as ".git/hooks/pre-commit"
#
#     Eg,
#     (
#         cd $WM_PROJECT_DIR/.git/hooks &&
#         ln -sf ../../bin/tools/pre-commit-hook pre-commit
#     )
#
#     Hook receives: empty
#
#     Checks for
#     - illegal code, e.g. <TAB>
#     - copyright is current, e.g. if present, contains XXX-<current-year>
#     - columns greater than 80 for *.[CH] files
#
# Note
#     Using "git commit --no-verify" it is possible to override the hook.
#
#------------------------------------------------------------------------------
die()
{
    echo 'pre-commit hook failure' 1>&2
    echo '-----------------------' 1>&2
    echo '' 1>&2
    echo "$@" 1>&2
    exit 1
}

#-----------------------------------------------------------------------------
# Check content that will be added by this commit.

if git rev-parse --verify -q HEAD > /dev/null
then
    against=HEAD
else
    # Initial commit: diff against an empty tree object
    against=4b825dc642cb6eb9a060e54bf8d69288fbee4904
fi

# list of all files
fileList=$(git diff-index --name-only $against --)
unset badFiles

# join badFiles with this amount of space
Indent="    "

reportBadFiles()
{
    if [ -n "$badFiles" ]
    then
        echo 'pre-commit hook failure' 1>&2
        echo '-----------------------' 1>&2
        echo "$@" 1>&2
        echo '' 1>&2
        echo "File(s):" 1>&2
        echo "$badFiles" 1>&2
        echo ''  1>&2
        exit 1
    fi
}

#
# check for bad characters or strings
#
checkIllegalCode()
{
    badWords=("[N]abla" $'\t')
    badMsg=("nabla" "<TAB>")
    nWords=${#badWords[@]};

    for (( i = 0; i < $nWords; i++ ))
    do
        illegal="${badWords[$i]}"

        badFiles=$(
        for f in $fileList
        do
            git grep -q --cached -e "$illegal" -- "$f" && \
                echo "$Indent$f"
        done
        )

        if [ -n "$badFiles" ]
        then
            reportBadFiles "Remove/correct bad '${badMsg[$i]}' references"
        fi
    done
}


#
# check that OpenCFD copyright is current
#
checkCopyright()
{
    year=$(date +%Y)

    badFiles=$(
    for f in $fileList
    do
        copyright=$(git grep --cached -e Copyright -- "$f" | grep OpenCFD)
        if [ -n "$copyright" ]
        then
            echo "$copyright" | grep -q "$year" || echo "$Indent$f"
        fi
    done
    )

    reportBadFiles "Update copyright year, e.g. XXXX-$year"
}


#
# limit line length to 80-columns, except C++ comment lines
# parses
#        path/fileName:<lineNr>:   contents
# and extracts line numbers for non-comment lines
#
checkLineLength()
{
    badFiles=$(
    for f in $fileList
    do
        # limit to *.[CH] files
        case "$f" in
        (*.[CH])
            lines=$(git grep -n --cached -e ".\{81,\}" -- "$f" |
                sed -n \
                    -e '\@^[^:]*:[^:]*: *//.*@b' \
                    -e 's@^[^:]*:\([0-9]*\):.*@\1@p' |
                tr '\n' ' '
            )
            [ -n "$lines" ] && echo "$Indent$f -- lines: $lines"
        ;;
        esac
    done
    )
    reportBadFiles "Limit code to 80 columns before pushing"
}


# do all checks
#~~~~~~~~~~~~~~

# builtin whitespace check to avoid trailing space, including CR-LF endings
bad=$(git diff-index --check --cached $against --) || die "$bad"

# check for illegal code, e.g. <TAB>, etc
checkIllegalCode

# ensure OpenCFD copyright contains correct year
checkCopyright

# ensure code conforms to 80 columns max
checkLineLength

#------------------------------------------------------------------------------
