#!/bin/sh
#------------------------------------------------------------------------------
# =========                 |
# \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
#  \\    /   O peration     |
#   \\  /    A nd           | Copyright (C) 1991-2009 OpenCFD Ltd.
#    \\/     M anipulation  |
#------------------------------------------------------------------------------
# License
#     This file is part of OpenFOAM.
#
#     OpenFOAM is free software; you can redistribute it and/or modify it
#     under the terms of the GNU General Public License as published by the
#     Free Software Foundation; either version 2 of the License, or (at your
#     option) any later version.
#
#     OpenFOAM is distributed in the hope that it will be useful, but WITHOUT
#     ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
#     FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
#     for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with OpenFOAM; if not, write to the Free Software Foundation,
#     Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
#
# Script
#     foamRunTutorials
#
# Description
#       Run either Allrun or blockMesh/application in current directory
#       and all its subdirectories.
#
#------------------------------------------------------------------------------

# Source tutorial functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

thisScript=$0
if [ "/${thisScript#/}" != "$thisScript" ]
then
    thisScript="$PWD/$thisScript"
fi

# If an argument is supplied do not execute ./Allrun to avoid recursion
if [ $# = 0 -a -f "./Allrun" ]
then
    # Specialised script.
    ./Allrun
elif [ -d "./system" ]
then
    # Normal case.
    parentDir=`dirname $PWD`
    application=`getApplication`
    runApplication blockMesh
    runApplication $application
else
    # Loop over sub-directories and compile any applications
    for case in *
    do
        if [ -d $case -a -d "$case/Make" ]
        then
            (compileApplication $case)
        fi
    done
    # Recurse to subdirectories
    for case in *
    do
        if [ -d $case ]
        then
            (cd $case && $thisScript)
        fi
    done
fi

#------------------------------------------------------------------------------
