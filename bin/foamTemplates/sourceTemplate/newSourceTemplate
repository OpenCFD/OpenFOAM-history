#!/bin/sh
#------------------------------------------------------------------------------
# =========                 |
# \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
#  \\    /   O peration     |
#   \\  /    A nd           | Copyright (C) 2009-2009 OpenCFD Ltd.
#    \\/     M anipulation  |
#-------------------------------------------------------------------------------
# License
#     This file is part of OpenFOAM.
#
#     OpenFOAM is free software; you can redistribute it and/or modify it
#     under the terms of the GNU General Public License as published by the
#     Free Software Foundation; either version 2 of the License, or (at your
#     option) any later version.
#
#     OpenFOAM is distributed in the hope that it will be useful, but WITHOUT
#     ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
#     FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
#     for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with OpenFOAM; if not, write to the Free Software Foundation,
#     Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
#
# Script
#     newSourceTemplate
#
# Description
#     Create a new standard OpenFOAM templated source file
#
#------------------------------------------------------------------------------
Script=${0##*/}

usage() {
    while [ "$#" -ge 1 ]; do echo "$1"; shift; done
    cat<<USAGE

usage: $Script <type> <Class name> <Template arguments...>

* create a new standard OpenFOAM source file

type: (C|H|I|IO)

USAGE
    exit 1
}

if [ "$#" -le 2 ]; then
   usage "wrong number of arguments, expected 3 (or more)"
fi

unset suffix fileType
case "$1" in
C|H)
   Template=Template
   fileType=$1
   className=$2
   ;;
I)
   suffix=$1
   Template=TemplateI
   fileType=H
   className=$2
   ;;
IO)
   suffix=$1
   Template=TemplateIO
   fileType=C
   className=$2
   ;;
*)
   usage "unknown type"
   ;;
esac


fileName=$className$suffix.$fileType

if [ -e "$fileName" ]; then
   echo "Cannot make $fileName, file exists"
   exit 1
fi

shift 2
echo "$Script: Creating new interface file $fileName"

# process class name
sed -e "s/ClassName/$className/g" \
    $WM_PROJECT_DIR/bin/foamTemplates/sourceTemplate/foamTemplate$Template.$fileType > $fileName.1

# process template arguments
for tArg in $*
do
    sed -e "s/TemplateClassArgument/class $tArg, TemplateClassArgument/g" \
        -e "s/TemplateArgument/$tArg, TemplateArgument/g" \
        $fileName.1 > $fileName.2

    mv $fileName.2 $fileName.1
done

# remove remaining ", Template argument"
sed -e "s/, TemplateClassArgument//g" \
    -e "s/, TemplateArgument//g" \
    $fileName.1 > $fileName

rm $fileName.1

#------------------------------------------------------------------------------
