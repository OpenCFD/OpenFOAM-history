/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  dev                                   |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters 0.1;

vertices
(
    (0 0 0)
    (10 0 0)
    (10 5 0)
    (0 5 0)
    (0 0 10)
    (10 0 10)
    (10 5 10)
    (0 5 10)
);

blocks
(
    hex (0 1 2 3 4 5 6 7) (40 20 1) simpleGrading (1 1 1)
);

edges
(
);

boundary
(
    floor
    {
        type wall;
        faces
        (
            (1 5 4 0)
        );
    }

    ceiling
    {
        type wall;
        faces
        (
            (2 6 7 3)
        );
    }

    inlet
    {
        type patch;
        faces
        (
            (0 4 7 3)
        );
    }

    outlet
    {
        type patch;
        faces
        (
            (1 5 6 2)
        );
    }

    fixedWalls
    {
        type empty;
        faces
        (
            (0 3 2 1)
            (4 5 6 7)
        );
    }

    baffle1Wall_0
    {
        type            directMappedWall;
        sampleMode      nearestPatchFace;
        sampleRegion    region0;
        samplePatch     baffle1Wall_1;
        offsetMode      uniform;
        offset          (0 0 0);
        faces ();
    }

    baffle1Wall_1
    {
        type            directMappedWall;
        sampleMode      nearestPatchFace;
        sampleRegion    region0;
        samplePatch     baffle1Wall_0;
        offsetMode      uniform;
        offset          (0 0 0);
        faces ();
    }

    baffle2Wall_0
    {
        type            directMappedWall;
        sampleMode      nearestPatchFace;
        sampleRegion    region0;
        samplePatch     baffle2Wall_1;
        offsetMode      uniform;
        offset          (0 0 0);
        faces ();
    }

    baffle2Wall_1
    {
        type            directMappedWall;
        sampleMode      nearestPatchFace;
        sampleRegion    region0;
        samplePatch     baffle2Wall_0;
        offsetMode      uniform;
        offset          (0 0 0);
        faces ();
    }
);

mergePatchPairs
(
);

// ************************************************************************* //
