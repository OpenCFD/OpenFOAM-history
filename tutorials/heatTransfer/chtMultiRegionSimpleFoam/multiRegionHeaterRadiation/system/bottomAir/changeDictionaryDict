/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  dev                                   |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      changeDictionaryDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

dictionaryReplacement
{
    boundary
    {
        minX
        {
            type            wall;
        }
        maxX
        {
            type            wall;
        }
    }

    U
    {
        internalField   uniform (0.01 0 0);
        boundaryField
        {
            ".*"
            {
                type            fixedValue;
                value           uniform (0 0 0);
            }
        }
    }

    T
    {
        internalField   uniform 300;
        boundaryField
        {
            ".*"
            {
                type            zeroGradient;
            }

            "bottomAir_to_.*"
            {
                type            compressible::turbulentTemperatureRadCoupledMixed;
                Tnbr            T;
                kappa           fluidThermo;
                QrNbr           none;
                Qr              Qr;
                kappaName       none;
                value           uniform 300;
            }
        }
    }

    epsilon
    {
        internalField   uniform 0.01;
        boundaryField
        {
            ".*"
            {
                type            compressible::epsilonWallFunction;
                value           uniform 0.01;
            }
        }
    }

    k
    {
        internalField   uniform 0.1;
        boundaryField
        {
            ".*"
            {
                type            compressible::kqRWallFunction;
                value           uniform 0.1;
            }
        }
    }

    p_rgh
    {
        internalField   uniform 1e5;
        boundaryField
        {
            ".*"
            {
                type            fixedFluxPressure;
                value           uniform 1e5;
            }
        }
    }

    p
    {
        internalField   uniform 1e5;
        boundaryField
        {
            ".*"
            {
                type            calculated;
                value           uniform 1e5;
            }
        }
    }

    Qr
    {
        internalField   uniform 0;
        boundaryField
        {
            ".*"
            {
                type            greyDiffusiveRadiationViewFactor;
                emissivityMode  lookup;
                Qro             uniform 0;
                emissivity      uniform 1.0;
                value           uniform 0;
            }

            "bottomAir_to_.*"
            {
                type            greyDiffusiveRadiationViewFactor;
                emissivityMode  solidRadiation;
                Qro             uniform 0;
                value           uniform 0;
            }
        }
    }

    G
    {
        internalField   uniform 0;
        boundaryField
        {
            ".*"
            {
                type            MarshakRadiation;
                T               T;
                emissivityMode  lookup;
                emissivity      uniform 1.0;
                value           uniform 0;
            }

            "bottomAir_to_.*"
            {
                type            MarshakRadiation;
                T               T;
                emissivityMode  solidRadiation;
                value           uniform 0;
            }
        }
    }

    IDefault
    {
        internalField   uniform 0;
        boundaryField
        {
            ".*"
            {
                type            greyDiffusiveRadiation;
                T               T;
                emissivityMode  lookup;
                emissivity      uniform 1.0;
                value           uniform 0;
            }

            "bottomAir_to_.*"
            {
                type            greyDiffusiveRadiation;
                T               T;
                emissivityMode  solidRadiation;
                value           uniform 0;
            }
        }
    }


}

// ************************************************************************* //
