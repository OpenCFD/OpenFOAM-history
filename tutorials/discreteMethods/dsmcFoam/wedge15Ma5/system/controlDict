/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  1.6                                   |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "system";
    object      controlDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

application     dsmcFoam;

startFrom       latestTime;

startTime       0;

stopAt          endTime;

endTime         0.00125;
// endTime         0.01;

deltaT          2e-6;

writeControl    runTime;

writeInterval   1e-4;

purgeWrite      0;

writeFormat     ascii;

writePrecision  10;

writeCompression uncompressed;

timeFormat      general;

timePrecision   6;

runTimeModifiable yes;

adjustTimeStep  no;

functions
(
    dsmcFields1
    {
        type dsmcFields;
        enabled   on;
        functionObjectLibs ( "libutilityFunctionObjects.so" );
        outputControl     outputTime;
    }

    fieldAverage1
    {
        type fieldAverage;
        functionObjectLibs ( "libfieldFunctionObjects.so" );
        outputControl     outputTime;
        resetOnOutput     off;
        fields
        (
            rhoN
            {
                 mean on;
                 prime2Mean off;
                 base time;
            }
            rhoM
            {
                mean on;
                prime2Mean off;
                base time;
            }
            dsmcRhoN
            {
                 mean on;
                 prime2Mean off;
                 base time;
            }
            momentum
            {
                mean on;
                prime2Mean off;
                base time;
            }
            linearKE
            {
                mean on;
                prime2Mean off;
                base time;
            }
            internalE
            {
                mean on;
                prime2Mean off;
                base time;
            }
            iDof
            {
                mean on;
                prime2Mean off;
                base time;
            }
            q
            {
                 mean on;
                 prime2Mean off;
                 base time;
            }
            fD
            {
                mean on;
                prime2Mean off;
                base time;
            }
        );
    }

    forces1
    {
        type        forces;
        enabled     on;
        functionObjectLibs ( "libforces.so" );
        outputControl     outputTime;
        patches     ( obstacle );
        directForceDensity true;
        fDName      fDMean;
        CofR        ( 0 0 0 );
        log         on;
    }
);


// ************************************************************************* //
