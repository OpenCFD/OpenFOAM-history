/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  dev                                   |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version         2.0;
    format          ascii;
    class           dictionary;
    object          cvMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

// Any scalar with a name <name>Coeff specifies a value that will be implemented
// as a faction of the target cell size

geometry
{
    flange.obj
    {
        name flange;
        type triSurfaceMesh;
    }
}


backgroundMeshDecomposition
{
    minLevels 1;
    sampleResolution 4;
    spanScale 5;
    maxCellWeightCoeff 10;
}


surfaceConformation
{
    locationInMesh                      (0 0 0);

    pointPairDistanceCoeff              0.1;

    mixedFeaturePointPPDistanceCoeff    5.0;

    featurePointExclusionDistanceCoeff  0.7;

    featureEdgeExclusionDistanceCoeff   0.7;

    surfaceSearchDistanceCoeff          5;

    maxSurfaceProtrusionCoeff           0.1;

    maxQuadAngle                        125;

    surfaceConformationRebuildFrequency 10;

    specialiseFeaturePoints             on;

    conformationControls
    {
        edgeSearchDistCoeff             5;
        surfacePtReplaceDistCoeff       0.5;
        surfacePtExclusionDistanceCoeff 0.5;

        maxIterations                   15;

        iterationToInitialHitRatioLimit 0.0001;
    }

    geometryToConformTo
    {
        flange
        {
            featureMethod           extendedFeatureEdgeMesh;
            extendedFeatureEdgeMesh "flange.extendedFeatureEdgeMesh";
        }
    }

    additionalFeatures
    {}
}


initialPoints
{
    minimumSurfaceDistanceCoeff 0.55;

    initialPointsMethod         autoDensity;

    autoDensityCoeffs
    {
        minLevels               2;
        maxSizeRatio            3.0;
        sampleResolution        4;
        surfaceSampleResolution 5;
    }

    pointFileCoeffs
    {
        pointFile              "constant/internalDelaunayVertices";
    }
}


motionControl
{
    defaultCellSize             0.0008;

    minimumCellSizeCoeff        0;

    // For background cell size and alignment grid
    maxSmoothingIterations      100;

    maxRefinementIterations     5;

    shapeControlFunctions
    {
        flange
        {
            type                        searchableSurfaceControl;
            priority                    1;
            mode                        inside;
            surfaceCellSizeFunction     uniformValue;
            uniformValueCoeffs
            {
                surfaceCellSizeCoeff    1;
            }
            cellSizeFunction            surfaceOffsetLinearDistance;
            surfaceOffsetLinearDistanceCoeffs
            {
                distanceCellSizeCoeff   1;
                surfaceOffsetCoeff      2.5;
                linearDistanceCoeff     2.5;
            }
        }

/*        fileControl*/
/*        {*/
/*            type                    fileControl;*/
/*            priority                1;*/
/*            pointsFile              "points";*/
/*            sizesFile               "sizes";*/
/*            alignmentsFile          "alignments";*/
/*        }*/
    }

    cellAspectRatioControl
    {
        aspectRatio             1.0;
        aspectRatioDirection    (0 0 0);
    }

    relaxationModel             adaptiveLinear;

    adaptiveLinearCoeffs
    {
        relaxationStart         0.5;
        relaxationEnd           0.0;
    }

    objOutput                   no;

    timeChecks                  no;

    maxLoadUnbalance            0.2;

    alignmentSearchSpokes       36;

    alignmentAcceptanceAngle    48;

    sizeAndAlignmentRebuildFrequency 20;

    pointInsertionCriteria
    {
        cellCentreDistCoeff     1.75;
        faceAreaRatioCoeff      0.0025;
        acceptanceAngle         21.5;
    }

    pointRemovalCriteria
    {
        cellCentreDistCoeff     0.65;
    }

    faceAreaWeightModel         piecewiseLinearRamp;

    piecewiseLinearRampCoeffs
    {
        lowerAreaFraction       0.5;
        upperAreaFraction       1.0;
    }
}


polyMeshFiltering
{
    filterEdges                 on;
    filterFaces                 off;
    writeTetDualMesh            false;
}


meshQualityControls
{
    #include "meshQualityDict"
}


// ************************************************************************* //
