/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  dev                                   |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version         2.0;
    format          ascii;
    class           dictionary;
    object          cvMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

// Any scalar with a name <name>Coeff specifies a value that will be implemented
// as a faction of the local target cell size

geometry
{
    blob.stl
    {
        name blob;
        type triSurfaceMesh;
    }

    refinementBox
    {
        type searchableBox;
        min (-0.2  -0.6 -0.2);
        max ( 0.4   0.2  0.35);
    }
}


backgroundMeshDecomposition
{
    minLevels 0;
    sampleResolution 4;
    spanScale 20;
    maxCellWeightCoeff 20;
}


initialPoints
{
    minimumSurfaceDistanceCoeff 0.55;

    initialPointsMethod         autoDensity;
    // initialPointsMethod     pointFile;

    autoDensityCoeffs
    {
        minLevels               0;
        maxSizeRatio            5.0;
        sampleResolution        5;
        surfaceSampleResolution 5;
    }

    pointFileCoeffs
    {
        pointFile               "constant/internalDelaunayVertices";
    }
}


surfaceConformation
{
    locationInMesh                      (0.1 0.1 0.2);

    pointPairDistanceCoeff              0.1;

    mixedFeaturePointPPDistanceCoeff    5.0;

    featurePointExclusionDistanceCoeff  0.4;

    featureEdgeExclusionDistanceCoeff   0.2;

    surfaceSearchDistanceCoeff          5;

    nearBoundaryDistanceCoeff           5;

    maxSurfaceProtrusionCoeff           0.001;

    maxQuadAngle                        125;

    surfaceConformationRebuildFrequency 10;

    specialiseFeaturePoints             off;

    conformationControls
    {
        edgeSearchDistCoeff             5;
        surfacePtReplaceDistCoeff       0.5;
        surfacePtExclusionDistanceCoeff 0.5;

        maxIterations                   15;

        iterationToInitialHitRatioLimit 0.0001;
    }

    geometryToConformTo
    {
        blob
        {
            featureMethod       none;
        }
    }

    additionalFeatures
    {}
}


motionControl
{
    defaultCellSize             0.1;

    minimumCellSizeCoeff        0;

    maxSmoothingIterations      0;
    maxRefinementIterations     0;

    shapeControlFunctions
    {
/*        blob*/
/*        {*/
/*            type                    searchableSurfaceControl;*/
/*            priority                1;*/
/*            mode                    bothSides;*/

/*            surfaceCellSizeFunction uniformValue;*/
/*            uniformValueCoeffs*/
/*            {*/
/*                surfaceCellSizeCoeff     1;*/
/*            }*/

/*            cellSizeFunction        uniform;*/
/*            uniformCoeffs*/
/*            {}*/
/*        }*/

        fileControl
        {
            type                    fileControl;
            priority                1;
            pointsFile              "points";
            sizesFile               "sizes";
            alignmentsFile          "alignments";
        }
    }

    cellAspectRatioControl
    {
        aspectRatio                 1.0;
        aspectRatioDirection        (1 0 0);
    }

    relaxationModel     adaptiveLinear;

    adaptiveLinearCoeffs
    {
        relaxationStart 1.0;
        relaxationEnd   0.0;
    }

    objOutput                   no;

    timeChecks                  no;

    maxLoadUnbalance            0.5;

    alignmentSearchSpokes       24;

    alignmentAcceptanceAngle    48;

    sizeAndAlignmentRebuildFrequency 40;

    pointInsertionCriteria
    {
        cellCentreDistCoeff     1.75;
        faceAreaRatioCoeff      0.0025;
        acceptanceAngle         21.5;
    }

    pointRemovalCriteria
    {
        cellCentreDistCoeff     0.65;
    }

    faceAreaWeightModel piecewiseLinearRamp;

    piecewiseLinearRampCoeffs
    {
        lowerAreaFraction       0.5;
        upperAreaFraction       1.0;
    }
}


polyMeshFiltering
{
    filterEdges                 on;
    filterFaces                 off;
    writeTetDualMesh            false;
}


meshQualityControls
{
    #include "meshQualityDict"
}


// ************************************************************************* //
