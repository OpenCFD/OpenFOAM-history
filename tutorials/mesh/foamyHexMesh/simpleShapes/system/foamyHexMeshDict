/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  dev                                   |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version         2.0;
    format          ascii;
    class           dictionary;
    object          foamyHexMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

// Include defaults parameters from master dictionary
#include "$WM_PROJECT_DIR/etc/caseDicts/foamyHexMeshDict"

geometry
{
    // Internal shape
    coneAndSphere_clean_orient.obj
    {
        name coneAndSphere;
        type triSurfaceMesh;
    }

    // Outside of domain
    domain
    {
        type searchableBox;
        min (-0.7 -0.9 -1);
        max (1.3 1.1 1);
    }

}


surfaceConformation
{
    locationInMesh (0 -0.5 0);

    featurePointControls
    {
        specialiseFeaturePoints on;
        edgeAiming              on;
        guardFeaturePoints      off;
        snapFeaturePoints       on;
        circulateEdges          off;
    }

    // Geometry to mesh to
    geometryToConformTo
    {
        coneAndSphere
        {
            featureMethod           extractFeatures;
            includedAngle           140;
        }

        domain
        {
            featureMethod           extractFeatures;
            includedAngle           100;
            mode                    outside;
        }
    }
}


initialPoints
{
    initialPointsMethod             autoDensity;

    autoDensityCoeffs
    {
        minCellSizeLimit        0.1;
        minLevels               4;
        maxSizeRatio            5.0;
        sampleResolution        3;
        surfaceSampleResolution 3;
    }
}


motionControl
{
    defaultCellSize         0.1;

    minimumCellSizeCoeff    0;

    // For background cell size and alignment grid
    maxSmoothingIterations  100;

    maxRefinementIterations 0;

    shapeControlFunctions
    {
        coneAndSphere
        {
            type                searchableSurfaceControl;
            priority            1;
            mode                bothSides;

            surfaceCellSizeFunction uniformValue;
            uniformValueCoeffs
            {
                surfaceCellSizeCoeff 0.75;
            }

            cellSizeFunction        uniform;
            uniformCoeffs
            {}
        }

        domain
        {
            type                searchableSurfaceControl;
            priority            1;
            mode                bothSides;

            surfaceCellSizeFunction uniformValue;
            uniformValueCoeffs
            {
                surfaceCellSizeCoeff 1;
            }

            cellSizeFunction        uniform;
            uniformCoeffs
            {}
        }
    }

    // Output lots and lots of .obj files
    objOutput                   no;

    // Timing and memory usage.
    timeChecks                  no;
}


// After simulation, when converting to polyMesh, filter out small faces/edges.
// Do not change. See cvControls.H
polyMeshFiltering
{
    filterEdges                 on;
    filterFaces                 on;
    writeTetDualMesh            false;
}


meshQualityControls
{
    #include "meshQualityDict"
}


// ************************************************************************* //
