/*---------------------------------------------------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  1.4                                   |
|   \\  /    A nd           | Web:      http://www.openfoam.org               |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/


FoamFile
{
    version         2.0;
    format          ascii;

    root            "";
    case            "";
    instance        "";
    local           "";

    class           dictionary;
    object          turbulenceProperties;
}

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

// Turbulence model selection
RASmodel            kEpsilon;

// Do you wish to calculate turbulence?
turbulence          on;

printCoeffs         on;

// Laminar model coefficients
laminarCoeffs
{
}

// Standard k-epsilon model coefficients
kEpsilonCoeffs
{
    // Cmu
    Cmu              0.09;
    // C1
    C1               1.44;
    // C2
    C2               1.92;
    // alphaEps
    alphaEps         0.76923;
}

// RNG k-epsilon model coefficients
RNGkEpsilonCoeffs
{
    // Cmu
    Cmu              0.0845;
    // C1
    C1               1.42;
    // C2
    C2               1.68;
    // alphak
    alphak           1.39;
    // alphaEps
    alphaEps         1.39;
    // eta0
    eta0             4.38;
    // beta
    beta             0.012;
}

// k-omega-SST model coefficients
kOmegaSSTCoeffs
{
    alphaK1          0.85034;
    alphaK2          1.0;
    alphaOmega1      0.5;
    alphaOmega2      0.85616;
    gamma1           0.5532;
    gamma2           0.4403;
    beta1            0.0750;
    beta2            0.0828;
    betaStar         0.09;
    a1               0.31;
    c1               10;

    Cmu              0.09;
}

// Shih non-Linear k-epsilon model coefficients
NonlinearKEShihCoeffs
{
    // Cmu
    Cmu              0.09;
    // C1
    C1               1.44;
    // C2
    C2               1.92;
    // alphak
    alphak           1;
    // alphaEps
    alphaEps         0.76932;
    // A1
    A1               1.25;
    // A2
    A2               1000;
    // Ctau1
    Ctau1            -4;
    // Ctau2
    Ctau2            13;
    // Ctau3
    Ctau3            -2;
    // alphaKsi
    alphaKsi         0.9;
}

// Lien non-Linear cubic k-epsilon model coefficients
LienCubicKECoeffs
{
    // C1
    C1               1.44;
    // C2
    C2               1.92;
    // alphak
    alphak           1;
    // alphaEps
    alphaEps         0.76923;
    // A1
    A1               1.25;
    // A2
    A2               1000;
    // Ctau1
    Ctau1            -4;
    // Ctau2
    Ctau2            13;
    // Ctau3
    Ctau3            -2;
    // alphaKsi
    alphaKsi         0.9;
}

// Gibson's q-zeta low Reynolds number k-epsilon model coefficients
QZetaCoeffs
{
    // Cmu
    Cmu              0.09;
    // C1
    C1               1.44;
    // C2
    C2               1.92;
    // alphaZeta
    alphaZeta        0.76923;
    // anisotropic?
    anisotropic     no;
}

// Launder-Sharma low Reynolds number k-epsilon model coefficients
LaunderSharmaKECoeffs
{
    // Cmu
    Cmu              0.09;
    // C1
    C1               1.44;
    // C2
    C2               1.92;
    // alphaEps
    alphaEps         0.76923;
}

// Lam-Bremhorst low Reynolds number k-Epsilon model coefficients
LamBremhorstKECoeffs
{
    // Cmu
    Cmu              0.09;
    // C1
    C1               1.44;
    // C2
    C2               1.92;
    // alphaEps
    alphaEps         0.76923;
}

// Lien-Leschziner low Reynolds number cubic k-epsilon model coefficients
LienCubicKELowReCoeffs
{
    // Cmu
    Cmu              0.09;
    // C1
    C1               1.44;
    // C2
    C2               1.92;
    // alphak
    alphak           1;
    // alphaEps
    alphaEps         0.76923;
    // A1
    A1               1.25;
    // A2
    A2               1000;
    // Ctau1
    Ctau1            -4;
    // Ctau2
    Ctau2            13;
    // Ctau3
    Ctau3            -2;
    // alphaKsi
    alphaKsi         0.9;
    // Am
    Am               0.016;
    // Aepsilon
    Aepsilon         0.263;
    // Amu
    Amu              0.00222;
}

// Lien-Leschziner low Reynolds number cubic k-epsilon model coefficients
LienLeschzinerLowReCoeffs
{
    // Cmu
    Cmu              0.09;
    // C1
    C1               1.44;
    // C2
    C2               1.92;
    // alphak
    alphak           1;
    // alphaEps
    alphaEps         0.76923;
    // Am
    Am               0.016;
    // Aepsilon
    Aepsilon         0.263;
    // Amu
    Amu              0.00222;
}

// Launder-Reece-Rodi RSTM with wall functions model coefficients
LRRCoeffs
{
    // Cmu
    Cmu              0.09;
    // Clrr1
    Clrr1            1.8;
    // Clrr2
    Clrr2            0.6;
    // C1
    C1               1.44;
    // C2
    C2               1.92;
    // Cs
    Cs               0.25;
    // Ceps
    Ceps             0.15;
    // alphaEps
    alphaEps         0.76923;
}

// Launder-Gibson RSTM with wall reflection and wall functions model coefficients
LaunderGibsonRSTMCoeffs
{
    // Cmu
    Cmu              0.09;
    // Clg1
    Clg1             1.8;
    // Clg2
    Clg2             0.6;
    // C1
    C1               1.44;
    // C2
    C2               1.92;
    // C1Ref
    C1Ref            0.5;
    // C2Ref
    C2Ref            0.3;
    // Cs
    Cs               0.25;
    // Ceps
    Ceps             0.15;
    // alphaEps
    alphaEps         0.76923;
    // alphaR
    alphaR           1.22;
}

// Standard Spalart-Allmaras model coefficients
SpalartAllmarasCoeffs
{
    // alphaNut
    alphaNut         1.5;
    // Cb1
    Cb1              0.1355;
    // Cb2
    Cb2              0.622;
    // Cw2
    Cw2              0.3;
    // Cw3
    Cw3              2;
    // Cv1
    Cv1              7.1;
    Cv2              5.0;
}

// Wall function coefficients
wallFunctionCoeffs
{
    // kappa
    kappa            0.4187;
    // E
    E                9;
}


// ************************************************************************* //
