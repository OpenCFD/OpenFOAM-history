/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  dev                                   |
|   \\  /    A nd           | Web:      http://www.OpenFOAM.org               |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      controlDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

application     sloshingFoam;

startFrom       startTime;

startTime       0;

stopAt          endTime;

endTime         40;

deltaT          0.01;

writeControl    adjustableRunTime;

writeInterval   0.05;

purgeWrite      0;

writeFormat     ascii;

writePrecision  6;

writeCompression compressed;

timeFormat      general;

timePrecision   6;

runTimeModifiable yes;

adjustTimeStep  yes;

maxCo           0.5;

maxDeltaT       1;

functions
(
    probes
    {
        // Type of functionObject
        type probes;

        // Output every
        outputControl timeStep;
        outputInterval 1;

        // Name of the directory for the probe data
        name probes;

        // Locations to be probed. runTime modifiable!
        probeLocations
        (
            (0 9.95 19.77)
            (0 -9.95 19.77)
        );

        // Fields to be probed. runTime modifiable!
        fields
        (
            p
        );
    }

    /*
    wallPressure
    {
        // Type of functionObject
        type surfaces;

        // Where to load it from (if not already in solver)
        functionObjectLibs ("libsampling.so");

        // Output every 10th time step
        outputControl timeStep;
        outputInterval 10;

        surfaceFormat raw;

        fields
        (
            p
        );

        surfaces
        (
            walls
            {
                type            patch;
                patchName       walls;
                triangulate     false;
            }
        );
    }
    */
);

// ************************************************************************* //
