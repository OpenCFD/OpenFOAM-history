/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  1.6                                   |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "system";
    object      controlDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

application     simpleFoam;

startFrom       startTime;

startTime       0;

stopAt          endTime;

endTime         1000;

deltaT          1;

writeControl    timeStep;

writeInterval   50;

purgeWrite      0;

writeFormat     ascii;

writePrecision  6;

writeCompression off;

timeFormat      general;

timePrecision   6;

runTimeModifiable true;

functions
{
    streamLines
    {
        type            streamLine;

        // Where to load it from (if not already in solver)
        functionObjectLibs ("libOpenFOAM.so" "libfieldFunctionObjects.so");

        // Output every
        outputControl   outputTime;
        //outputInterval 10;

        setFormat       vtk;//gnuplot;//xmgr; //raw;  //gnuplot;  //jplot;

        // Velocity field to use for tracking.
        U U;

        // Tracked forwards (+U) or backwards (-U)
        trackForward    true;

        // Names of fields to sample. Should contain above velocity field!
        fields (p k U);

        // Cells particles can travel before being removed
        lifeTime 1000;

        // Cloud name to use
        cloudName       particleTracks;

        // Seeding method. See the sampleSets in sampleDict.
        seedSampleSet   uniform;  //cloud;//triSurfaceMeshPointSet;

        uniformCoeffs
        {
            type        uniform;
            axis        x;  //distance;

            start       (-0.0205 0.001  0.00001);
            end         (-0.0205 0.0251 0.00001);
            nPoints     10;
        }

//        cloudCoeffs
//        {
//            type        cloud;
//            axis        x;
//
//            points
//            (
//                (-0.0205936225239282 0.0144729199524163 0.00001)
//            );
//        }

//        triSurfaceMeshPointSetCoeffs
//        {
//            type        triSurfaceMeshPointSet;
//            axis        distance;
//            surface     twoTri.stl;
//        }
    }
}

// ************************************************************************* //
