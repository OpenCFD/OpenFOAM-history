/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  1.7.1                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      changeDictionaryDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

dictionaryReplacement
{
    alphat
    {
        boundaryField
        {
            cycLeft
            {
                type            cyclic;
                value           uniform 0;
            }
            cycRight
            {
                type            cyclic;
                value           uniform 0;
            }
        }
    }
    epsilon
    {
        boundaryField
        {
            cycLeft
            {
                type            cyclic;
                value           uniform 0;
            }
            cycRight
            {
                type            cyclic;
                value           uniform 0;
            }
        }
    }
    G
    {
        boundaryField
        {
            cycLeft
            {
                type            cyclic;
                value           uniform 0;
            }
            cycRight
            {
                type            cyclic;
                value           uniform 0;
            }
        }
    }
    H2O
    {
        boundaryField
        {
            cycLeft
            {
                type            cyclic;
                value           uniform 0;
            }
            cycRight
            {
                type            cyclic;
                value           uniform 0;
            }
        }
    }
    k
    {
        boundaryField
        {
            cycLeft
            {
                type            cyclic;
                value           uniform 0;
            }
            cycRight
            {
                type            cyclic;
                value           uniform 0;
            }
        }
    }
    mut
    {
        boundaryField
        {
            cycLeft
            {
                type            cyclic;
                value           uniform 0;
            }
            cycRight
            {
                type            cyclic;
                value           uniform 0;
            }
        }
    }
    N2
    {
        boundaryField
        {
            cycLeft
            {
                type            cyclic;
                value           uniform 0;
            }
            cycRight
            {
                type            cyclic;
                value           uniform 0;
            }
        }
    }
    O2
    {
        boundaryField
        {
            cycLeft
            {
                type            cyclic;
                value           uniform 0;
            }
            cycRight
            {
                type            cyclic;
                value           uniform 0;
            }
        }
    }
    p
    {
        boundaryField
        {
            cycLeft
            {
                type            cyclic;
                value           uniform 0;
            }
            cycRight
            {
                type            cyclic;
                value           uniform 0;
            }
        }
    }
    T
    {
        boundaryField
        {
            cycLeft
            {
                type            cyclic;
                value           uniform 0;
            }
            cycRight
            {
                type            cyclic;
                value           uniform 0;
            }
        }
    }
    U
    {
        boundaryField
        {
            cycLeft
            {
                type            cyclic;
                value           uniform (0 0 0);
            }
            cycRight
            {
                type            cyclic;
                value           uniform (0 0 0);
            }
        }
    }
}

// ************************************************************************* //
